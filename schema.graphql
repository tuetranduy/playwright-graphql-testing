schema {
  query: Query
  mutation: Mutation
}

type Aggregate {
  count: Int!
}

"""Asset system model"""
type Asset implements Entity & Node {
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Asset!]!
  """The file name"""
  fileName: String!
  """The file handle"""
  handle: String!
  """The height of the file"""
  height: Float
  """List of Asset versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
  """The unique identifier"""
  id: ID!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
    """
    Potential locales that should be returned.
    
    The order of locales will also override locale fall-backing behaviour in the query's subtree.
    
    Note any related model with localized fields in the query's subtree will be affected.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    
    Consider using this in conjunction with forceParentLocale on the children relation fields.
    """
    locales: [Locale!]! = [en, de]
  ): [Asset!]!
  """The mime type of the file"""
  mimeType: String
  productImages(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the parent document as the first locale in the fallback locales in the query's subtree.
    
    Note that `productImages` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `productImages` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: ProductOrderByInput
    skip: Int
    where: ProductWhereInput
  ): [Product!]!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!
  """The file size"""
  size: Float
  """System stage field"""
  stage: Stage!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """Get the url for the asset with provided transformations applied."""
  url(transformation: AssetTransformationInput): String!
  """The file width"""
  width: Float
}

input AssetConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
  """Document to connect"""
  where: AssetWhereUniqueInput!
}

"""A connection to a list of items."""
type AssetConnection {
  aggregate: Aggregate!
  """A list of edges."""
  edges: [AssetEdge!]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input AssetCreateInput {
  createdAt: DateTime
  fileName: String!
  handle: String!
  height: Float
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: AssetCreateLocalizationsInput
  mimeType: String
  productImages: ProductCreateManyInlineInput
  size: Float
  updatedAt: DateTime
  width: Float
}

input AssetCreateLocalizationDataInput {
  createdAt: DateTime
  fileName: String!
  handle: String!
  height: Float
  mimeType: String
  size: Float
  updatedAt: DateTime
  width: Float
}

input AssetCreateLocalizationInput {
  """Localization input"""
  data: AssetCreateLocalizationDataInput!
  locale: Locale!
}

input AssetCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [AssetCreateLocalizationInput!]
}

input AssetCreateManyInlineInput {
  """Connect multiple existing Asset documents"""
  connect: [AssetWhereUniqueInput!]
  """Create and connect multiple existing Asset documents"""
  create: [AssetCreateInput!]
}

input AssetCreateOneInlineInput {
  """Connect one existing Asset document"""
  connect: AssetWhereUniqueInput
  """Create and connect one Asset document"""
  create: AssetCreateInput
}

"""An edge in a connection."""
type AssetEdge {
  """A cursor for use in pagination."""
  cursor: String!
  """The item at the end of the edge."""
  node: Asset!
}

"""Identifies documents"""
input AssetManyWhereInput {
  """Logical AND on all given filters."""
  AND: [AssetWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetWhereInput!]
  """Logical OR on all given filters."""
  OR: [AssetWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: AssetWhereStageInput
  documentInStages_none: AssetWhereStageInput
  documentInStages_some: AssetWhereStageInput
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  productImages_every: ProductWhereInput
  productImages_none: ProductWhereInput
  productImages_some: ProductWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum AssetOrderByInput {
  createdAt_ASC
  createdAt_DESC
  fileName_ASC
  fileName_DESC
  handle_ASC
  handle_DESC
  height_ASC
  height_DESC
  id_ASC
  id_DESC
  mimeType_ASC
  mimeType_DESC
  publishedAt_ASC
  publishedAt_DESC
  size_ASC
  size_DESC
  updatedAt_ASC
  updatedAt_DESC
  width_ASC
  width_DESC
}

"""Transformations for Assets"""
input AssetTransformationInput {
  document: DocumentTransformationInput
  image: ImageTransformationInput
  """Pass true if you want to validate the passed transformation parameters"""
  validateOptions: Boolean = false
}

input AssetUpdateInput {
  fileName: String
  handle: String
  height: Float
  """Manage document localizations"""
  localizations: AssetUpdateLocalizationsInput
  mimeType: String
  productImages: ProductUpdateManyInlineInput
  size: Float
  width: Float
}

input AssetUpdateLocalizationDataInput {
  fileName: String
  handle: String
  height: Float
  mimeType: String
  size: Float
  width: Float
}

input AssetUpdateLocalizationInput {
  data: AssetUpdateLocalizationDataInput!
  locale: Locale!
}

input AssetUpdateLocalizationsInput {
  """Localizations to create"""
  create: [AssetCreateLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
  """Localizations to update"""
  update: [AssetUpdateLocalizationInput!]
  upsert: [AssetUpsertLocalizationInput!]
}

input AssetUpdateManyInlineInput {
  """Connect multiple existing Asset documents"""
  connect: [AssetConnectInput!]
  """Create and connect multiple Asset documents"""
  create: [AssetCreateInput!]
  """Delete multiple Asset documents"""
  delete: [AssetWhereUniqueInput!]
  """Disconnect multiple Asset documents"""
  disconnect: [AssetWhereUniqueInput!]
  """
  Override currently-connected documents with multiple existing Asset documents
  """
  set: [AssetWhereUniqueInput!]
  """Update multiple Asset documents"""
  update: [AssetUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Asset documents"""
  upsert: [AssetUpsertWithNestedWhereUniqueInput!]
}

input AssetUpdateManyInput {
  fileName: String
  height: Float
  """Optional updates to localizations"""
  localizations: AssetUpdateManyLocalizationsInput
  mimeType: String
  size: Float
  width: Float
}

input AssetUpdateManyLocalizationDataInput {
  fileName: String
  height: Float
  mimeType: String
  size: Float
  width: Float
}

input AssetUpdateManyLocalizationInput {
  data: AssetUpdateManyLocalizationDataInput!
  locale: Locale!
}

input AssetUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [AssetUpdateManyLocalizationInput!]
}

input AssetUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: AssetUpdateManyInput!
  """Document search"""
  where: AssetWhereInput!
}

input AssetUpdateOneInlineInput {
  """Connect existing Asset document"""
  connect: AssetWhereUniqueInput
  """Create and connect one Asset document"""
  create: AssetCreateInput
  """Delete currently connected Asset document"""
  delete: Boolean
  """Disconnect currently connected Asset document"""
  disconnect: Boolean
  """Update single Asset document"""
  update: AssetUpdateWithNestedWhereUniqueInput
  """Upsert single Asset document"""
  upsert: AssetUpsertWithNestedWhereUniqueInput
}

input AssetUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: AssetUpdateInput!
  """Unique document search"""
  where: AssetWhereUniqueInput!
}

input AssetUpsertInput {
  """Create document if it didn't exist"""
  create: AssetCreateInput!
  """Update document if it exists"""
  update: AssetUpdateInput!
}

input AssetUpsertLocalizationInput {
  create: AssetCreateLocalizationDataInput!
  locale: Locale!
  update: AssetUpdateLocalizationDataInput!
}

input AssetUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: AssetUpsertInput!
  """Unique document search"""
  where: AssetWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input AssetWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input AssetWhereInput {
  """Logical AND on all given filters."""
  AND: [AssetWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetWhereInput!]
  """Logical OR on all given filters."""
  OR: [AssetWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: AssetWhereStageInput
  documentInStages_none: AssetWhereStageInput
  documentInStages_some: AssetWhereStageInput
  fileName: String
  """All values containing the given string."""
  fileName_contains: String
  """All values ending with the given string."""
  fileName_ends_with: String
  """All values that are contained in given list."""
  fileName_in: [String]
  """Any other value that exists and is not equal to the given value."""
  fileName_not: String
  """All values not containing the given string."""
  fileName_not_contains: String
  """All values not ending with the given string"""
  fileName_not_ends_with: String
  """All values that are not contained in given list."""
  fileName_not_in: [String]
  """All values not starting with the given string."""
  fileName_not_starts_with: String
  """All values starting with the given string."""
  fileName_starts_with: String
  handle: String
  """All values containing the given string."""
  handle_contains: String
  """All values ending with the given string."""
  handle_ends_with: String
  """All values that are contained in given list."""
  handle_in: [String]
  """Any other value that exists and is not equal to the given value."""
  handle_not: String
  """All values not containing the given string."""
  handle_not_contains: String
  """All values not ending with the given string"""
  handle_not_ends_with: String
  """All values that are not contained in given list."""
  handle_not_in: [String]
  """All values not starting with the given string."""
  handle_not_starts_with: String
  """All values starting with the given string."""
  handle_starts_with: String
  height: Float
  """All values greater than the given value."""
  height_gt: Float
  """All values greater than or equal the given value."""
  height_gte: Float
  """All values that are contained in given list."""
  height_in: [Float]
  """All values less than the given value."""
  height_lt: Float
  """All values less than or equal the given value."""
  height_lte: Float
  """Any other value that exists and is not equal to the given value."""
  height_not: Float
  """All values that are not contained in given list."""
  height_not_in: [Float]
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  mimeType: String
  """All values containing the given string."""
  mimeType_contains: String
  """All values ending with the given string."""
  mimeType_ends_with: String
  """All values that are contained in given list."""
  mimeType_in: [String]
  """Any other value that exists and is not equal to the given value."""
  mimeType_not: String
  """All values not containing the given string."""
  mimeType_not_contains: String
  """All values not ending with the given string"""
  mimeType_not_ends_with: String
  """All values that are not contained in given list."""
  mimeType_not_in: [String]
  """All values not starting with the given string."""
  mimeType_not_starts_with: String
  """All values starting with the given string."""
  mimeType_starts_with: String
  productImages_every: ProductWhereInput
  productImages_none: ProductWhereInput
  productImages_some: ProductWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  size: Float
  """All values greater than the given value."""
  size_gt: Float
  """All values greater than or equal the given value."""
  size_gte: Float
  """All values that are contained in given list."""
  size_in: [Float]
  """All values less than the given value."""
  size_lt: Float
  """All values less than or equal the given value."""
  size_lte: Float
  """Any other value that exists and is not equal to the given value."""
  size_not: Float
  """All values that are not contained in given list."""
  size_not_in: [Float]
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
  width: Float
  """All values greater than the given value."""
  width_gt: Float
  """All values greater than or equal the given value."""
  width_gte: Float
  """All values that are contained in given list."""
  width_in: [Float]
  """All values less than the given value."""
  width_lt: Float
  """All values less than or equal the given value."""
  width_lte: Float
  """Any other value that exists and is not equal to the given value."""
  width_not: Float
  """All values that are not contained in given list."""
  width_not_in: [Float]
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input AssetWhereStageInput {
  """Logical AND on all given filters."""
  AND: [AssetWhereStageInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetWhereStageInput!]
  """Logical OR on all given filters."""
  OR: [AssetWhereStageInput!]
  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: AssetWhereComparatorInput
  """Specify the stage to compare with"""
  stage: Stage
}

"""References Asset record uniquely"""
input AssetWhereUniqueInput {
  id: ID
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

"""Category of products, e.g. Menswear."""
type Category implements Entity & Node {
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  description: String
  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Category!]!
  """List of Category versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
  """The unique identifier"""
  id: ID!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
    """
    Potential locales that should be returned.
    
    The order of locales will also override locale fall-backing behaviour in the query's subtree.
    
    Note any related model with localized fields in the query's subtree will be affected.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    
    Consider using this in conjunction with forceParentLocale on the children relation fields.
    """
    locales: [Locale!]! = [en, de]
  ): [Category!]!
  name: String!
  products(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the parent document as the first locale in the fallback locales in the query's subtree.
    
    Note that `products` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `products` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: ProductOrderByInput
    skip: Int
    where: ProductWhereInput
  ): [Product!]!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!
  slug: String!
  """System stage field"""
  stage: Stage!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input CategoryConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
  """Document to connect"""
  where: CategoryWhereUniqueInput!
}

"""A connection to a list of items."""
type CategoryConnection {
  aggregate: Aggregate!
  """A list of edges."""
  edges: [CategoryEdge!]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input CategoryCreateInput {
  createdAt: DateTime
  """description input for default locale (en)"""
  description: String
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: CategoryCreateLocalizationsInput
  """name input for default locale (en)"""
  name: String!
  products: ProductCreateManyInlineInput
  """slug input for default locale (en)"""
  slug: String!
  updatedAt: DateTime
}

input CategoryCreateLocalizationDataInput {
  createdAt: DateTime
  description: String
  name: String!
  slug: String!
  updatedAt: DateTime
}

input CategoryCreateLocalizationInput {
  """Localization input"""
  data: CategoryCreateLocalizationDataInput!
  locale: Locale!
}

input CategoryCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [CategoryCreateLocalizationInput!]
}

input CategoryCreateManyInlineInput {
  """Connect multiple existing Category documents"""
  connect: [CategoryWhereUniqueInput!]
  """Create and connect multiple existing Category documents"""
  create: [CategoryCreateInput!]
}

input CategoryCreateOneInlineInput {
  """Connect one existing Category document"""
  connect: CategoryWhereUniqueInput
  """Create and connect one Category document"""
  create: CategoryCreateInput
}

"""An edge in a connection."""
type CategoryEdge {
  """A cursor for use in pagination."""
  cursor: String!
  """The item at the end of the edge."""
  node: Category!
}

"""Identifies documents"""
input CategoryManyWhereInput {
  """Logical AND on all given filters."""
  AND: [CategoryWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [CategoryWhereInput!]
  """Logical OR on all given filters."""
  OR: [CategoryWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: CategoryWhereStageInput
  documentInStages_none: CategoryWhereStageInput
  documentInStages_some: CategoryWhereStageInput
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  products_every: ProductWhereInput
  products_none: ProductWhereInput
  products_some: ProductWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum CategoryOrderByInput {
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  publishedAt_ASC
  publishedAt_DESC
  slug_ASC
  slug_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input CategoryUpdateInput {
  """description input for default locale (en)"""
  description: String
  """Manage document localizations"""
  localizations: CategoryUpdateLocalizationsInput
  """name input for default locale (en)"""
  name: String
  products: ProductUpdateManyInlineInput
  """slug input for default locale (en)"""
  slug: String
}

input CategoryUpdateLocalizationDataInput {
  description: String
  name: String
  slug: String
}

input CategoryUpdateLocalizationInput {
  data: CategoryUpdateLocalizationDataInput!
  locale: Locale!
}

input CategoryUpdateLocalizationsInput {
  """Localizations to create"""
  create: [CategoryCreateLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
  """Localizations to update"""
  update: [CategoryUpdateLocalizationInput!]
  upsert: [CategoryUpsertLocalizationInput!]
}

input CategoryUpdateManyInlineInput {
  """Connect multiple existing Category documents"""
  connect: [CategoryConnectInput!]
  """Create and connect multiple Category documents"""
  create: [CategoryCreateInput!]
  """Delete multiple Category documents"""
  delete: [CategoryWhereUniqueInput!]
  """Disconnect multiple Category documents"""
  disconnect: [CategoryWhereUniqueInput!]
  """
  Override currently-connected documents with multiple existing Category documents
  """
  set: [CategoryWhereUniqueInput!]
  """Update multiple Category documents"""
  update: [CategoryUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Category documents"""
  upsert: [CategoryUpsertWithNestedWhereUniqueInput!]
}

input CategoryUpdateManyInput {
  """description input for default locale (en)"""
  description: String
  """Optional updates to localizations"""
  localizations: CategoryUpdateManyLocalizationsInput
}

input CategoryUpdateManyLocalizationDataInput {
  description: String
}

input CategoryUpdateManyLocalizationInput {
  data: CategoryUpdateManyLocalizationDataInput!
  locale: Locale!
}

input CategoryUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [CategoryUpdateManyLocalizationInput!]
}

input CategoryUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: CategoryUpdateManyInput!
  """Document search"""
  where: CategoryWhereInput!
}

input CategoryUpdateOneInlineInput {
  """Connect existing Category document"""
  connect: CategoryWhereUniqueInput
  """Create and connect one Category document"""
  create: CategoryCreateInput
  """Delete currently connected Category document"""
  delete: Boolean
  """Disconnect currently connected Category document"""
  disconnect: Boolean
  """Update single Category document"""
  update: CategoryUpdateWithNestedWhereUniqueInput
  """Upsert single Category document"""
  upsert: CategoryUpsertWithNestedWhereUniqueInput
}

input CategoryUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: CategoryUpdateInput!
  """Unique document search"""
  where: CategoryWhereUniqueInput!
}

input CategoryUpsertInput {
  """Create document if it didn't exist"""
  create: CategoryCreateInput!
  """Update document if it exists"""
  update: CategoryUpdateInput!
}

input CategoryUpsertLocalizationInput {
  create: CategoryCreateLocalizationDataInput!
  locale: Locale!
  update: CategoryUpdateLocalizationDataInput!
}

input CategoryUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: CategoryUpsertInput!
  """Unique document search"""
  where: CategoryWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input CategoryWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input CategoryWhereInput {
  """Logical AND on all given filters."""
  AND: [CategoryWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [CategoryWhereInput!]
  """Logical OR on all given filters."""
  OR: [CategoryWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  description: String
  """All values containing the given string."""
  description_contains: String
  """All values ending with the given string."""
  description_ends_with: String
  """All values that are contained in given list."""
  description_in: [String]
  """Any other value that exists and is not equal to the given value."""
  description_not: String
  """All values not containing the given string."""
  description_not_contains: String
  """All values not ending with the given string"""
  description_not_ends_with: String
  """All values that are not contained in given list."""
  description_not_in: [String]
  """All values not starting with the given string."""
  description_not_starts_with: String
  """All values starting with the given string."""
  description_starts_with: String
  documentInStages_every: CategoryWhereStageInput
  documentInStages_none: CategoryWhereStageInput
  documentInStages_some: CategoryWhereStageInput
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  name: String
  """All values containing the given string."""
  name_contains: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values that are contained in given list."""
  name_in: [String]
  """Any other value that exists and is not equal to the given value."""
  name_not: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  """All values that are not contained in given list."""
  name_not_in: [String]
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values starting with the given string."""
  name_starts_with: String
  products_every: ProductWhereInput
  products_none: ProductWhereInput
  products_some: ProductWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  slug: String
  """All values containing the given string."""
  slug_contains: String
  """All values ending with the given string."""
  slug_ends_with: String
  """All values that are contained in given list."""
  slug_in: [String]
  """Any other value that exists and is not equal to the given value."""
  slug_not: String
  """All values not containing the given string."""
  slug_not_contains: String
  """All values not ending with the given string"""
  slug_not_ends_with: String
  """All values that are not contained in given list."""
  slug_not_in: [String]
  """All values not starting with the given string."""
  slug_not_starts_with: String
  """All values starting with the given string."""
  slug_starts_with: String
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input CategoryWhereStageInput {
  """Logical AND on all given filters."""
  AND: [CategoryWhereStageInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [CategoryWhereStageInput!]
  """Logical OR on all given filters."""
  OR: [CategoryWhereStageInput!]
  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: CategoryWhereComparatorInput
  """Specify the stage to compare with"""
  stage: Stage
}

"""References Category record uniquely"""
input CategoryWhereUniqueInput {
  id: ID
}

"""Collection of products, e.g. Winter Sale."""
type Collection implements Entity & Node {
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  description: String
  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Collection!]!
  """List of Collection versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
  """The unique identifier"""
  id: ID!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
    """
    Potential locales that should be returned.
    
    The order of locales will also override locale fall-backing behaviour in the query's subtree.
    
    Note any related model with localized fields in the query's subtree will be affected.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    
    Consider using this in conjunction with forceParentLocale on the children relation fields.
    """
    locales: [Locale!]! = [en, de]
  ): [Collection!]!
  name: String!
  products(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the parent document as the first locale in the fallback locales in the query's subtree.
    
    Note that `products` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `products` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: ProductOrderByInput
    skip: Int
    where: ProductWhereInput
  ): [Product!]!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!
  slug: String!
  """System stage field"""
  stage: Stage!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input CollectionConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
  """Document to connect"""
  where: CollectionWhereUniqueInput!
}

"""A connection to a list of items."""
type CollectionConnection {
  aggregate: Aggregate!
  """A list of edges."""
  edges: [CollectionEdge!]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input CollectionCreateInput {
  createdAt: DateTime
  """description input for default locale (en)"""
  description: String
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: CollectionCreateLocalizationsInput
  """name input for default locale (en)"""
  name: String!
  products: ProductCreateManyInlineInput
  """slug input for default locale (en)"""
  slug: String!
  updatedAt: DateTime
}

input CollectionCreateLocalizationDataInput {
  createdAt: DateTime
  description: String
  name: String!
  slug: String!
  updatedAt: DateTime
}

input CollectionCreateLocalizationInput {
  """Localization input"""
  data: CollectionCreateLocalizationDataInput!
  locale: Locale!
}

input CollectionCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [CollectionCreateLocalizationInput!]
}

input CollectionCreateManyInlineInput {
  """Connect multiple existing Collection documents"""
  connect: [CollectionWhereUniqueInput!]
  """Create and connect multiple existing Collection documents"""
  create: [CollectionCreateInput!]
}

input CollectionCreateOneInlineInput {
  """Connect one existing Collection document"""
  connect: CollectionWhereUniqueInput
  """Create and connect one Collection document"""
  create: CollectionCreateInput
}

"""An edge in a connection."""
type CollectionEdge {
  """A cursor for use in pagination."""
  cursor: String!
  """The item at the end of the edge."""
  node: Collection!
}

"""Identifies documents"""
input CollectionManyWhereInput {
  """Logical AND on all given filters."""
  AND: [CollectionWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [CollectionWhereInput!]
  """Logical OR on all given filters."""
  OR: [CollectionWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: CollectionWhereStageInput
  documentInStages_none: CollectionWhereStageInput
  documentInStages_some: CollectionWhereStageInput
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  products_every: ProductWhereInput
  products_none: ProductWhereInput
  products_some: ProductWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum CollectionOrderByInput {
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  publishedAt_ASC
  publishedAt_DESC
  slug_ASC
  slug_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input CollectionUpdateInput {
  """description input for default locale (en)"""
  description: String
  """Manage document localizations"""
  localizations: CollectionUpdateLocalizationsInput
  """name input for default locale (en)"""
  name: String
  products: ProductUpdateManyInlineInput
  """slug input for default locale (en)"""
  slug: String
}

input CollectionUpdateLocalizationDataInput {
  description: String
  name: String
  slug: String
}

input CollectionUpdateLocalizationInput {
  data: CollectionUpdateLocalizationDataInput!
  locale: Locale!
}

input CollectionUpdateLocalizationsInput {
  """Localizations to create"""
  create: [CollectionCreateLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
  """Localizations to update"""
  update: [CollectionUpdateLocalizationInput!]
  upsert: [CollectionUpsertLocalizationInput!]
}

input CollectionUpdateManyInlineInput {
  """Connect multiple existing Collection documents"""
  connect: [CollectionConnectInput!]
  """Create and connect multiple Collection documents"""
  create: [CollectionCreateInput!]
  """Delete multiple Collection documents"""
  delete: [CollectionWhereUniqueInput!]
  """Disconnect multiple Collection documents"""
  disconnect: [CollectionWhereUniqueInput!]
  """
  Override currently-connected documents with multiple existing Collection documents
  """
  set: [CollectionWhereUniqueInput!]
  """Update multiple Collection documents"""
  update: [CollectionUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Collection documents"""
  upsert: [CollectionUpsertWithNestedWhereUniqueInput!]
}

input CollectionUpdateManyInput {
  """description input for default locale (en)"""
  description: String
  """Optional updates to localizations"""
  localizations: CollectionUpdateManyLocalizationsInput
}

input CollectionUpdateManyLocalizationDataInput {
  description: String
}

input CollectionUpdateManyLocalizationInput {
  data: CollectionUpdateManyLocalizationDataInput!
  locale: Locale!
}

input CollectionUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [CollectionUpdateManyLocalizationInput!]
}

input CollectionUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: CollectionUpdateManyInput!
  """Document search"""
  where: CollectionWhereInput!
}

input CollectionUpdateOneInlineInput {
  """Connect existing Collection document"""
  connect: CollectionWhereUniqueInput
  """Create and connect one Collection document"""
  create: CollectionCreateInput
  """Delete currently connected Collection document"""
  delete: Boolean
  """Disconnect currently connected Collection document"""
  disconnect: Boolean
  """Update single Collection document"""
  update: CollectionUpdateWithNestedWhereUniqueInput
  """Upsert single Collection document"""
  upsert: CollectionUpsertWithNestedWhereUniqueInput
}

input CollectionUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: CollectionUpdateInput!
  """Unique document search"""
  where: CollectionWhereUniqueInput!
}

input CollectionUpsertInput {
  """Create document if it didn't exist"""
  create: CollectionCreateInput!
  """Update document if it exists"""
  update: CollectionUpdateInput!
}

input CollectionUpsertLocalizationInput {
  create: CollectionCreateLocalizationDataInput!
  locale: Locale!
  update: CollectionUpdateLocalizationDataInput!
}

input CollectionUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: CollectionUpsertInput!
  """Unique document search"""
  where: CollectionWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input CollectionWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input CollectionWhereInput {
  """Logical AND on all given filters."""
  AND: [CollectionWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [CollectionWhereInput!]
  """Logical OR on all given filters."""
  OR: [CollectionWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  description: String
  """All values containing the given string."""
  description_contains: String
  """All values ending with the given string."""
  description_ends_with: String
  """All values that are contained in given list."""
  description_in: [String]
  """Any other value that exists and is not equal to the given value."""
  description_not: String
  """All values not containing the given string."""
  description_not_contains: String
  """All values not ending with the given string"""
  description_not_ends_with: String
  """All values that are not contained in given list."""
  description_not_in: [String]
  """All values not starting with the given string."""
  description_not_starts_with: String
  """All values starting with the given string."""
  description_starts_with: String
  documentInStages_every: CollectionWhereStageInput
  documentInStages_none: CollectionWhereStageInput
  documentInStages_some: CollectionWhereStageInput
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  name: String
  """All values containing the given string."""
  name_contains: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values that are contained in given list."""
  name_in: [String]
  """Any other value that exists and is not equal to the given value."""
  name_not: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  """All values that are not contained in given list."""
  name_not_in: [String]
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values starting with the given string."""
  name_starts_with: String
  products_every: ProductWhereInput
  products_none: ProductWhereInput
  products_some: ProductWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  slug: String
  """All values containing the given string."""
  slug_contains: String
  """All values ending with the given string."""
  slug_ends_with: String
  """All values that are contained in given list."""
  slug_in: [String]
  """Any other value that exists and is not equal to the given value."""
  slug_not: String
  """All values not containing the given string."""
  slug_not_contains: String
  """All values not ending with the given string"""
  slug_not_ends_with: String
  """All values that are not contained in given list."""
  slug_not_in: [String]
  """All values not starting with the given string."""
  slug_not_starts_with: String
  """All values starting with the given string."""
  slug_starts_with: String
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input CollectionWhereStageInput {
  """Logical AND on all given filters."""
  AND: [CollectionWhereStageInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [CollectionWhereStageInput!]
  """Logical OR on all given filters."""
  OR: [CollectionWhereStageInput!]
  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: CollectionWhereComparatorInput
  """Specify the stage to compare with"""
  stage: Stage
}

"""References Collection record uniquely"""
input CollectionWhereUniqueInput {
  id: ID
}

"""
Representing a color value comprising of HEX, RGBA and css color values
"""
type Color {
  css: String!
  hex: Hex!
  rgba: RGBA!
}

"""
Accepts either HEX or RGBA color value. At least one of hex or rgba value should be passed. If both are passed RGBA is used.
"""
input ColorInput {
  hex: Hex
  rgba: RGBAInput
}

input ConnectPositionInput {
  """Connect document after specified document"""
  after: ID
  """Connect document before specified document"""
  before: ID
  """Connect document at last position"""
  end: Boolean
  """Connect document at first position"""
  start: Boolean
}

type Currency implements Entity & Node {
  code: String!
  """The time the document was created"""
  createdAt: DateTime!
  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  default: Boolean!
  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Currency!]!
  """List of Currency versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
  """The unique identifier"""
  id: ID!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  rate: Float!
  scheduledIn(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!
  """System stage field"""
  stage: Stage!
  """The time the document was updated"""
  updatedAt: DateTime!
  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input CurrencyConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
  """Document to connect"""
  where: CurrencyWhereUniqueInput!
}

"""A connection to a list of items."""
type CurrencyConnection {
  aggregate: Aggregate!
  """A list of edges."""
  edges: [CurrencyEdge!]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input CurrencyCreateInput {
  code: String!
  createdAt: DateTime
  default: Boolean!
  rate: Float!
  updatedAt: DateTime
}

input CurrencyCreateManyInlineInput {
  """Connect multiple existing Currency documents"""
  connect: [CurrencyWhereUniqueInput!]
  """Create and connect multiple existing Currency documents"""
  create: [CurrencyCreateInput!]
}

input CurrencyCreateOneInlineInput {
  """Connect one existing Currency document"""
  connect: CurrencyWhereUniqueInput
  """Create and connect one Currency document"""
  create: CurrencyCreateInput
}

"""An edge in a connection."""
type CurrencyEdge {
  """A cursor for use in pagination."""
  cursor: String!
  """The item at the end of the edge."""
  node: Currency!
}

"""Identifies documents"""
input CurrencyManyWhereInput {
  """Logical AND on all given filters."""
  AND: [CurrencyWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [CurrencyWhereInput!]
  """Logical OR on all given filters."""
  OR: [CurrencyWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  code: String
  """All values containing the given string."""
  code_contains: String
  """All values ending with the given string."""
  code_ends_with: String
  """All values that are contained in given list."""
  code_in: [String]
  """Any other value that exists and is not equal to the given value."""
  code_not: String
  """All values not containing the given string."""
  code_not_contains: String
  """All values not ending with the given string"""
  code_not_ends_with: String
  """All values that are not contained in given list."""
  code_not_in: [String]
  """All values not starting with the given string."""
  code_not_starts_with: String
  """All values starting with the given string."""
  code_starts_with: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  default: Boolean
  """Any other value that exists and is not equal to the given value."""
  default_not: Boolean
  documentInStages_every: CurrencyWhereStageInput
  documentInStages_none: CurrencyWhereStageInput
  documentInStages_some: CurrencyWhereStageInput
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  rate: Float
  """All values greater than the given value."""
  rate_gt: Float
  """All values greater than or equal the given value."""
  rate_gte: Float
  """All values that are contained in given list."""
  rate_in: [Float]
  """All values less than the given value."""
  rate_lt: Float
  """All values less than or equal the given value."""
  rate_lte: Float
  """Any other value that exists and is not equal to the given value."""
  rate_not: Float
  """All values that are not contained in given list."""
  rate_not_in: [Float]
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum CurrencyOrderByInput {
  code_ASC
  code_DESC
  createdAt_ASC
  createdAt_DESC
  default_ASC
  default_DESC
  id_ASC
  id_DESC
  publishedAt_ASC
  publishedAt_DESC
  rate_ASC
  rate_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input CurrencyUpdateInput {
  code: String
  default: Boolean
  rate: Float
}

input CurrencyUpdateManyInlineInput {
  """Connect multiple existing Currency documents"""
  connect: [CurrencyConnectInput!]
  """Create and connect multiple Currency documents"""
  create: [CurrencyCreateInput!]
  """Delete multiple Currency documents"""
  delete: [CurrencyWhereUniqueInput!]
  """Disconnect multiple Currency documents"""
  disconnect: [CurrencyWhereUniqueInput!]
  """
  Override currently-connected documents with multiple existing Currency documents
  """
  set: [CurrencyWhereUniqueInput!]
  """Update multiple Currency documents"""
  update: [CurrencyUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Currency documents"""
  upsert: [CurrencyUpsertWithNestedWhereUniqueInput!]
}

input CurrencyUpdateManyInput {
  rate: Float
}

input CurrencyUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: CurrencyUpdateManyInput!
  """Document search"""
  where: CurrencyWhereInput!
}

input CurrencyUpdateOneInlineInput {
  """Connect existing Currency document"""
  connect: CurrencyWhereUniqueInput
  """Create and connect one Currency document"""
  create: CurrencyCreateInput
  """Delete currently connected Currency document"""
  delete: Boolean
  """Disconnect currently connected Currency document"""
  disconnect: Boolean
  """Update single Currency document"""
  update: CurrencyUpdateWithNestedWhereUniqueInput
  """Upsert single Currency document"""
  upsert: CurrencyUpsertWithNestedWhereUniqueInput
}

input CurrencyUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: CurrencyUpdateInput!
  """Unique document search"""
  where: CurrencyWhereUniqueInput!
}

input CurrencyUpsertInput {
  """Create document if it didn't exist"""
  create: CurrencyCreateInput!
  """Update document if it exists"""
  update: CurrencyUpdateInput!
}

input CurrencyUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: CurrencyUpsertInput!
  """Unique document search"""
  where: CurrencyWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input CurrencyWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input CurrencyWhereInput {
  """Logical AND on all given filters."""
  AND: [CurrencyWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [CurrencyWhereInput!]
  """Logical OR on all given filters."""
  OR: [CurrencyWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  code: String
  """All values containing the given string."""
  code_contains: String
  """All values ending with the given string."""
  code_ends_with: String
  """All values that are contained in given list."""
  code_in: [String]
  """Any other value that exists and is not equal to the given value."""
  code_not: String
  """All values not containing the given string."""
  code_not_contains: String
  """All values not ending with the given string"""
  code_not_ends_with: String
  """All values that are not contained in given list."""
  code_not_in: [String]
  """All values not starting with the given string."""
  code_not_starts_with: String
  """All values starting with the given string."""
  code_starts_with: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  default: Boolean
  """Any other value that exists and is not equal to the given value."""
  default_not: Boolean
  documentInStages_every: CurrencyWhereStageInput
  documentInStages_none: CurrencyWhereStageInput
  documentInStages_some: CurrencyWhereStageInput
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  rate: Float
  """All values greater than the given value."""
  rate_gt: Float
  """All values greater than or equal the given value."""
  rate_gte: Float
  """All values that are contained in given list."""
  rate_in: [Float]
  """All values less than the given value."""
  rate_lt: Float
  """All values less than or equal the given value."""
  rate_lte: Float
  """Any other value that exists and is not equal to the given value."""
  rate_not: Float
  """All values that are not contained in given list."""
  rate_not_in: [Float]
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input CurrencyWhereStageInput {
  """Logical AND on all given filters."""
  AND: [CurrencyWhereStageInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [CurrencyWhereStageInput!]
  """Logical OR on all given filters."""
  OR: [CurrencyWhereStageInput!]
  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: CurrencyWhereComparatorInput
  """Specify the stage to compare with"""
  stage: Stage
}

"""References Currency record uniquely"""
input CurrencyWhereUniqueInput {
  code: String
  default: Boolean
  id: ID
}

"""
A date string, such as 2007-12-03 (YYYY-MM-DD), compliant with ISO 8601 standard for representation of dates using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representationof dates and times using the Gregorian calendar.
"""
scalar DateTime

enum DocumentFileTypes {
  doc
  docx
  html
  jpg
  odp
  ods
  odt
  pdf
  png
  ppt
  pptx
  svg
  txt
  webp
  xls
  xlsx
}

input DocumentOutputInput {
  """
  Transforms a document into a desired file type.
  See this matrix for format support:
  
  PDF:	jpg, odp, ods, odt, png, svg, txt, and webp
  DOC:	docx, html, jpg, odt, pdf, png, svg, txt, and webp
  DOCX:	doc, html, jpg, odt, pdf, png, svg, txt, and webp
  ODT:	doc, docx, html, jpg, pdf, png, svg, txt, and webp
  XLS:	jpg, pdf, ods, png, svg, xlsx, and webp
  XLSX:	jpg, pdf, ods, png, svg, xls, and webp
  ODS:	jpg, pdf, png, xls, svg, xlsx, and webp
  PPT:	jpg, odp, pdf, png, svg, pptx, and webp
  PPTX:	jpg, odp, pdf, png, svg, ppt, and webp
  ODP:	jpg, pdf, png, ppt, svg, pptx, and webp
  BMP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  GIF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  JPG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  PNG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  WEBP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  TIFF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  AI:	    jpg, odp, ods, odt, pdf, png, svg, and webp
  PSD:	jpg, odp, ods, odt, pdf, png, svg, and webp
  SVG:	jpg, odp, ods, odt, pdf, png, and webp
  HTML:	jpg, odt, pdf, svg, txt, and webp
  TXT:	jpg, html, odt, pdf, svg, and webp
  """
  format: DocumentFileTypes
}

"""Transformations for Documents"""
input DocumentTransformationInput {
  """Changes the output for the file."""
  output: DocumentOutputInput
}

type DocumentVersion {
  createdAt: DateTime!
  data: Json
  id: ID!
  revision: Int!
  stage: Stage!
}

"""An object with an ID"""
interface Entity {
  """The id of the object."""
  id: ID!
  """The Stage of an object"""
  stage: Stage!
}

"""
This enumeration holds all typenames that implement the Entity interface. Components and models implement the Entity interface.
"""
enum EntityTypeName {
  """Asset system model"""
  Asset
  """Category of products, e.g. Menswear."""
  Category
  """Collection of products, e.g. Winter Sale."""
  Collection
  Currency
  Order
  OrderItem
  Product
  ProductColorVariant
  ProductSizeColorVariant
  ProductSizeVariant
  Review
  """Scheduled Operation system model"""
  ScheduledOperation
  """Scheduled Release system model"""
  ScheduledRelease
  """User system model"""
  User
}

"""Allows to specify input to query models and components directly"""
input EntityWhereInput {
  """The ID of an object"""
  id: ID!
  locale: Locale
  stage: Stage!
  """The Type name of an object"""
  typename: EntityTypeName!
}

scalar Hex

enum ImageFit {
  """
  Resizes the image to fit within the specified parameters without distorting, cropping, or changing the aspect ratio.
  """
  clip
  """
  Resizes the image to fit the specified parameters exactly by removing any parts of the image that don't fit within the boundaries.
  """
  crop
  """
  Resizes the image to fit within the parameters, but as opposed to 'fit:clip' will not scale the image if the image is smaller than the output size.
  """
  max
  """
  Resizes the image to fit the specified parameters exactly by scaling the image to the desired size. The aspect ratio of the image is not respected and the image can be distorted using this method.
  """
  scale
}

input ImageResizeInput {
  """The default value for the fit parameter is fit:clip."""
  fit: ImageFit
  """
  The height in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  height: Int
  """
  The width in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  width: Int
}

"""Transformations for Images"""
input ImageTransformationInput {
  """Resizes the image"""
  resize: ImageResizeInput
}

"""Raw JSON value"""
scalar Json

"""Locale system enumeration"""
enum Locale {
  de
  """System locale"""
  en
}

"""Representing a geolocation point with latitude and longitude"""
type Location {
  distance(from: LocationInput!): Float!
  latitude: Float!
  longitude: Float!
}

"""Input for a geolocation point with latitude and longitude"""
input LocationInput {
  latitude: Float!
  longitude: Float!
}

"""
The Long scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  """Create one asset"""
  createAsset(data: AssetCreateInput!): Asset @deprecated(reason: "Asset mutations will be overhauled soon")
  """Create one category"""
  createCategory(data: CategoryCreateInput!): Category
  """Create one collection"""
  createCollection(data: CollectionCreateInput!): Collection
  """Create one currency"""
  createCurrency(data: CurrencyCreateInput!): Currency
  """Create one order"""
  createOrder(data: OrderCreateInput!): Order
  """Create one orderItem"""
  createOrderItem(data: OrderItemCreateInput!): OrderItem
  """Create one product"""
  createProduct(data: ProductCreateInput!): Product
  """Create one productColorVariant"""
  createProductColorVariant(data: ProductColorVariantCreateInput!): ProductColorVariant
  """Create one productSizeColorVariant"""
  createProductSizeColorVariant(data: ProductSizeColorVariantCreateInput!): ProductSizeColorVariant
  """Create one productSizeVariant"""
  createProductSizeVariant(data: ProductSizeVariantCreateInput!): ProductSizeVariant
  """Create one review"""
  createReview(data: ReviewCreateInput!): Review
  """Create one scheduledRelease"""
  createScheduledRelease(data: ScheduledReleaseCreateInput!): ScheduledRelease
  """Delete one asset from _all_ existing stages. Returns deleted document."""
  deleteAsset(
    """Document to delete"""
    where: AssetWhereUniqueInput!
  ): Asset
  """
  Delete one category from _all_ existing stages. Returns deleted document.
  """
  deleteCategory(
    """Document to delete"""
    where: CategoryWhereUniqueInput!
  ): Category
  """
  Delete one collection from _all_ existing stages. Returns deleted document.
  """
  deleteCollection(
    """Document to delete"""
    where: CollectionWhereUniqueInput!
  ): Collection
  """
  Delete one currency from _all_ existing stages. Returns deleted document.
  """
  deleteCurrency(
    """Document to delete"""
    where: CurrencyWhereUniqueInput!
  ): Currency
  """Delete many Asset documents"""
  deleteManyAssets(
    """Documents to delete"""
    where: AssetManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyAssetsConnection)")
  """Delete many Asset documents, return deleted documents"""
  deleteManyAssetsConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int
    """Documents to delete"""
    where: AssetManyWhereInput
  ): AssetConnection!
  """Delete many Category documents"""
  deleteManyCategories(
    """Documents to delete"""
    where: CategoryManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyCategoriesConnection)")
  """Delete many Category documents, return deleted documents"""
  deleteManyCategoriesConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int
    """Documents to delete"""
    where: CategoryManyWhereInput
  ): CategoryConnection!
  """Delete many Collection documents"""
  deleteManyCollections(
    """Documents to delete"""
    where: CollectionManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyCollectionsConnection)")
  """Delete many Collection documents, return deleted documents"""
  deleteManyCollectionsConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int
    """Documents to delete"""
    where: CollectionManyWhereInput
  ): CollectionConnection!
  """Delete many Currency documents"""
  deleteManyCurrencies(
    """Documents to delete"""
    where: CurrencyManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyCurrenciesConnection)")
  """Delete many Currency documents, return deleted documents"""
  deleteManyCurrenciesConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int
    """Documents to delete"""
    where: CurrencyManyWhereInput
  ): CurrencyConnection!
  """Delete many OrderItem documents"""
  deleteManyOrderItems(
    """Documents to delete"""
    where: OrderItemManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyOrderItemsConnection)")
  """Delete many OrderItem documents, return deleted documents"""
  deleteManyOrderItemsConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int
    """Documents to delete"""
    where: OrderItemManyWhereInput
  ): OrderItemConnection!
  """Delete many Order documents"""
  deleteManyOrders(
    """Documents to delete"""
    where: OrderManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyOrdersConnection)")
  """Delete many Order documents, return deleted documents"""
  deleteManyOrdersConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int
    """Documents to delete"""
    where: OrderManyWhereInput
  ): OrderConnection!
  """Delete many ProductColorVariant documents"""
  deleteManyProductColorVariants(
    """Documents to delete"""
    where: ProductColorVariantManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyProductColorVariantsConnection)")
  """Delete many ProductColorVariant documents, return deleted documents"""
  deleteManyProductColorVariantsConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int
    """Documents to delete"""
    where: ProductColorVariantManyWhereInput
  ): ProductColorVariantConnection!
  """Delete many ProductSizeColorVariant documents"""
  deleteManyProductSizeColorVariants(
    """Documents to delete"""
    where: ProductSizeColorVariantManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyProductSizeColorVariantsConnection)")
  """
  Delete many ProductSizeColorVariant documents, return deleted documents
  """
  deleteManyProductSizeColorVariantsConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int
    """Documents to delete"""
    where: ProductSizeColorVariantManyWhereInput
  ): ProductSizeColorVariantConnection!
  """Delete many ProductSizeVariant documents"""
  deleteManyProductSizeVariants(
    """Documents to delete"""
    where: ProductSizeVariantManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyProductSizeVariantsConnection)")
  """Delete many ProductSizeVariant documents, return deleted documents"""
  deleteManyProductSizeVariantsConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int
    """Documents to delete"""
    where: ProductSizeVariantManyWhereInput
  ): ProductSizeVariantConnection!
  """Delete many Product documents"""
  deleteManyProducts(
    """Documents to delete"""
    where: ProductManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyProductsConnection)")
  """Delete many Product documents, return deleted documents"""
  deleteManyProductsConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int
    """Documents to delete"""
    where: ProductManyWhereInput
  ): ProductConnection!
  """Delete many Review documents"""
  deleteManyReviews(
    """Documents to delete"""
    where: ReviewManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyReviewsConnection)")
  """Delete many Review documents, return deleted documents"""
  deleteManyReviewsConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int
    """Documents to delete"""
    where: ReviewManyWhereInput
  ): ReviewConnection!
  """Delete one order from _all_ existing stages. Returns deleted document."""
  deleteOrder(
    """Document to delete"""
    where: OrderWhereUniqueInput!
  ): Order
  """
  Delete one orderItem from _all_ existing stages. Returns deleted document.
  """
  deleteOrderItem(
    """Document to delete"""
    where: OrderItemWhereUniqueInput!
  ): OrderItem
  """
  Delete one product from _all_ existing stages. Returns deleted document.
  """
  deleteProduct(
    """Document to delete"""
    where: ProductWhereUniqueInput!
  ): Product
  """
  Delete one productColorVariant from _all_ existing stages. Returns deleted document.
  """
  deleteProductColorVariant(
    """Document to delete"""
    where: ProductColorVariantWhereUniqueInput!
  ): ProductColorVariant
  """
  Delete one productSizeColorVariant from _all_ existing stages. Returns deleted document.
  """
  deleteProductSizeColorVariant(
    """Document to delete"""
    where: ProductSizeColorVariantWhereUniqueInput!
  ): ProductSizeColorVariant
  """
  Delete one productSizeVariant from _all_ existing stages. Returns deleted document.
  """
  deleteProductSizeVariant(
    """Document to delete"""
    where: ProductSizeVariantWhereUniqueInput!
  ): ProductSizeVariant
  """
  Delete one review from _all_ existing stages. Returns deleted document.
  """
  deleteReview(
    """Document to delete"""
    where: ReviewWhereUniqueInput!
  ): Review
  """Delete and return scheduled operation"""
  deleteScheduledOperation(
    """Document to delete"""
    where: ScheduledOperationWhereUniqueInput!
  ): ScheduledOperation
  """
  Delete one scheduledRelease from _all_ existing stages. Returns deleted document.
  """
  deleteScheduledRelease(
    """Document to delete"""
    where: ScheduledReleaseWhereUniqueInput!
  ): ScheduledRelease
  """Publish one asset"""
  publishAsset(
    """Optional localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: AssetWhereUniqueInput!
    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): Asset
  """Publish one category"""
  publishCategory(
    """Optional localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: CategoryWhereUniqueInput!
    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): Category
  """Publish one collection"""
  publishCollection(
    """Optional localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: CollectionWhereUniqueInput!
    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): Collection
  """Publish one currency"""
  publishCurrency(
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: CurrencyWhereUniqueInput!
  ): Currency
  """Publish many Asset documents"""
  publishManyAssets(
    """Document localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: AssetManyWhereInput
    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyAssetsConnection)")
  """Publish many Asset documents"""
  publishManyAssetsConnection(
    after: ID
    before: ID
    first: Int
    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int
    """Document localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    skip: Int
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: AssetManyWhereInput
    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): AssetConnection!
  """Publish many Category documents"""
  publishManyCategories(
    """Document localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: CategoryManyWhereInput
    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyCategoriesConnection)")
  """Publish many Category documents"""
  publishManyCategoriesConnection(
    after: ID
    before: ID
    first: Int
    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int
    """Document localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    skip: Int
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: CategoryManyWhereInput
    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): CategoryConnection!
  """Publish many Collection documents"""
  publishManyCollections(
    """Document localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: CollectionManyWhereInput
    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyCollectionsConnection)")
  """Publish many Collection documents"""
  publishManyCollectionsConnection(
    after: ID
    before: ID
    first: Int
    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int
    """Document localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    skip: Int
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: CollectionManyWhereInput
    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): CollectionConnection!
  """Publish many Currency documents"""
  publishManyCurrencies(
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: CurrencyManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyCurrenciesConnection)")
  """Publish many Currency documents"""
  publishManyCurrenciesConnection(
    after: ID
    before: ID
    first: Int
    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int
    skip: Int
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: CurrencyManyWhereInput
  ): CurrencyConnection!
  """Publish many OrderItem documents"""
  publishManyOrderItems(
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: OrderItemManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyOrderItemsConnection)")
  """Publish many OrderItem documents"""
  publishManyOrderItemsConnection(
    after: ID
    before: ID
    first: Int
    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int
    skip: Int
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: OrderItemManyWhereInput
  ): OrderItemConnection!
  """Publish many Order documents"""
  publishManyOrders(
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: OrderManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyOrdersConnection)")
  """Publish many Order documents"""
  publishManyOrdersConnection(
    after: ID
    before: ID
    first: Int
    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int
    skip: Int
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: OrderManyWhereInput
  ): OrderConnection!
  """Publish many ProductColorVariant documents"""
  publishManyProductColorVariants(
    """Document localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: ProductColorVariantManyWhereInput
    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyProductColorVariantsConnection)")
  """Publish many ProductColorVariant documents"""
  publishManyProductColorVariantsConnection(
    after: ID
    before: ID
    first: Int
    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int
    """Document localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    skip: Int
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: ProductColorVariantManyWhereInput
    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): ProductColorVariantConnection!
  """Publish many ProductSizeColorVariant documents"""
  publishManyProductSizeColorVariants(
    """Document localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: ProductSizeColorVariantManyWhereInput
    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyProductSizeColorVariantsConnection)")
  """Publish many ProductSizeColorVariant documents"""
  publishManyProductSizeColorVariantsConnection(
    after: ID
    before: ID
    first: Int
    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int
    """Document localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    skip: Int
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: ProductSizeColorVariantManyWhereInput
    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): ProductSizeColorVariantConnection!
  """Publish many ProductSizeVariant documents"""
  publishManyProductSizeVariants(
    """Document localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: ProductSizeVariantManyWhereInput
    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyProductSizeVariantsConnection)")
  """Publish many ProductSizeVariant documents"""
  publishManyProductSizeVariantsConnection(
    after: ID
    before: ID
    first: Int
    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int
    """Document localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    skip: Int
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: ProductSizeVariantManyWhereInput
    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): ProductSizeVariantConnection!
  """Publish many Product documents"""
  publishManyProducts(
    """Document localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: ProductManyWhereInput
    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyProductsConnection)")
  """Publish many Product documents"""
  publishManyProductsConnection(
    after: ID
    before: ID
    first: Int
    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int
    """Document localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    skip: Int
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: ProductManyWhereInput
    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): ProductConnection!
  """Publish many Review documents"""
  publishManyReviews(
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: ReviewManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyReviewsConnection)")
  """Publish many Review documents"""
  publishManyReviewsConnection(
    after: ID
    before: ID
    first: Int
    """Stage to find matching documents in"""
    from: Stage = DRAFT
    last: Int
    skip: Int
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage to be published"""
    where: ReviewManyWhereInput
  ): ReviewConnection!
  """Publish one order"""
  publishOrder(
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: OrderWhereUniqueInput!
  ): Order
  """Publish one orderItem"""
  publishOrderItem(
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: OrderItemWhereUniqueInput!
  ): OrderItem
  """Publish one product"""
  publishProduct(
    """Optional localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: ProductWhereUniqueInput!
    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): Product
  """Publish one productColorVariant"""
  publishProductColorVariant(
    """Optional localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: ProductColorVariantWhereUniqueInput!
    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): ProductColorVariant
  """Publish one productSizeColorVariant"""
  publishProductSizeColorVariant(
    """Optional localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: ProductSizeColorVariantWhereUniqueInput!
    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): ProductSizeColorVariant
  """Publish one productSizeVariant"""
  publishProductSizeVariant(
    """Optional localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: ProductSizeVariantWhereUniqueInput!
    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): ProductSizeVariant
  """Publish one review"""
  publishReview(
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: ReviewWhereUniqueInput!
  ): Review
  """Schedule to publish one asset"""
  schedulePublishAsset(
    """Optional localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: AssetWhereUniqueInput!
    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): Asset
  """Schedule to publish one category"""
  schedulePublishCategory(
    """Optional localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: CategoryWhereUniqueInput!
    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): Category
  """Schedule to publish one collection"""
  schedulePublishCollection(
    """Optional localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: CollectionWhereUniqueInput!
    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): Collection
  """Schedule to publish one currency"""
  schedulePublishCurrency(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: CurrencyWhereUniqueInput!
  ): Currency
  """Schedule to publish one order"""
  schedulePublishOrder(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: OrderWhereUniqueInput!
  ): Order
  """Schedule to publish one orderItem"""
  schedulePublishOrderItem(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: OrderItemWhereUniqueInput!
  ): OrderItem
  """Schedule to publish one product"""
  schedulePublishProduct(
    """Optional localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: ProductWhereUniqueInput!
    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): Product
  """Schedule to publish one productColorVariant"""
  schedulePublishProductColorVariant(
    """Optional localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: ProductColorVariantWhereUniqueInput!
    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): ProductColorVariant
  """Schedule to publish one productSizeColorVariant"""
  schedulePublishProductSizeColorVariant(
    """Optional localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: ProductSizeColorVariantWhereUniqueInput!
    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): ProductSizeColorVariant
  """Schedule to publish one productSizeVariant"""
  schedulePublishProductSizeVariant(
    """Optional localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: ProductSizeVariantWhereUniqueInput!
    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): ProductSizeVariant
  """Schedule to publish one review"""
  schedulePublishReview(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
    """Document to publish"""
    where: ReviewWhereUniqueInput!
  ): Review
  """
  Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishAsset(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
    """Document to unpublish"""
    where: AssetWhereUniqueInput!
  ): Asset
  """
  Unpublish one category from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishCategory(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
    """Document to unpublish"""
    where: CategoryWhereUniqueInput!
  ): Category
  """
  Unpublish one collection from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishCollection(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
    """Document to unpublish"""
    where: CollectionWhereUniqueInput!
  ): Collection
  """
  Unpublish one currency from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishCurrency(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """Document to unpublish"""
    where: CurrencyWhereUniqueInput!
  ): Currency
  """
  Unpublish one order from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishOrder(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """Document to unpublish"""
    where: OrderWhereUniqueInput!
  ): Order
  """
  Unpublish one orderItem from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishOrderItem(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """Document to unpublish"""
    where: OrderItemWhereUniqueInput!
  ): OrderItem
  """
  Unpublish one product from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishProduct(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
    """Document to unpublish"""
    where: ProductWhereUniqueInput!
  ): Product
  """
  Unpublish one productColorVariant from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishProductColorVariant(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
    """Document to unpublish"""
    where: ProductColorVariantWhereUniqueInput!
  ): ProductColorVariant
  """
  Unpublish one productSizeColorVariant from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishProductSizeColorVariant(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
    """Document to unpublish"""
    where: ProductSizeColorVariantWhereUniqueInput!
  ): ProductSizeColorVariant
  """
  Unpublish one productSizeVariant from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishProductSizeVariant(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
    """Document to unpublish"""
    where: ProductSizeVariantWhereUniqueInput!
  ): ProductSizeVariant
  """
  Unpublish one review from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishReview(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """Document to unpublish"""
    where: ReviewWhereUniqueInput!
  ): Review
  """
  Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishAsset(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
    """Document to unpublish"""
    where: AssetWhereUniqueInput!
  ): Asset
  """
  Unpublish one category from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishCategory(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
    """Document to unpublish"""
    where: CategoryWhereUniqueInput!
  ): Category
  """
  Unpublish one collection from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishCollection(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
    """Document to unpublish"""
    where: CollectionWhereUniqueInput!
  ): Collection
  """
  Unpublish one currency from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishCurrency(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """Document to unpublish"""
    where: CurrencyWhereUniqueInput!
  ): Currency
  """Unpublish many Asset documents"""
  unpublishManyAssets(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    """Locales to unpublish"""
    locales: [Locale!]
    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true
    """Identifies documents in each stage"""
    where: AssetManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyAssetsConnection)")
  """
  Find many Asset documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyAssetsConnection(
    after: ID
    before: ID
    first: Int
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int
    """Locales to unpublish"""
    locales: [Locale!]
    skip: Int
    """Stage to find matching documents in"""
    stage: Stage = DRAFT
    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true
    """Identifies documents in draft stage"""
    where: AssetManyWhereInput
  ): AssetConnection!
  """Unpublish many Category documents"""
  unpublishManyCategories(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    """Locales to unpublish"""
    locales: [Locale!]
    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true
    """Identifies documents in each stage"""
    where: CategoryManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyCategoriesConnection)")
  """
  Find many Category documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyCategoriesConnection(
    after: ID
    before: ID
    first: Int
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int
    """Locales to unpublish"""
    locales: [Locale!]
    skip: Int
    """Stage to find matching documents in"""
    stage: Stage = DRAFT
    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true
    """Identifies documents in draft stage"""
    where: CategoryManyWhereInput
  ): CategoryConnection!
  """Unpublish many Collection documents"""
  unpublishManyCollections(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    """Locales to unpublish"""
    locales: [Locale!]
    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true
    """Identifies documents in each stage"""
    where: CollectionManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyCollectionsConnection)")
  """
  Find many Collection documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyCollectionsConnection(
    after: ID
    before: ID
    first: Int
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int
    """Locales to unpublish"""
    locales: [Locale!]
    skip: Int
    """Stage to find matching documents in"""
    stage: Stage = DRAFT
    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true
    """Identifies documents in draft stage"""
    where: CollectionManyWhereInput
  ): CollectionConnection!
  """Unpublish many Currency documents"""
  unpublishManyCurrencies(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage"""
    where: CurrencyManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyCurrenciesConnection)")
  """
  Find many Currency documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyCurrenciesConnection(
    after: ID
    before: ID
    first: Int
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int
    skip: Int
    """Stage to find matching documents in"""
    stage: Stage = DRAFT
    """Identifies documents in draft stage"""
    where: CurrencyManyWhereInput
  ): CurrencyConnection!
  """Unpublish many OrderItem documents"""
  unpublishManyOrderItems(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage"""
    where: OrderItemManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyOrderItemsConnection)")
  """
  Find many OrderItem documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyOrderItemsConnection(
    after: ID
    before: ID
    first: Int
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int
    skip: Int
    """Stage to find matching documents in"""
    stage: Stage = DRAFT
    """Identifies documents in draft stage"""
    where: OrderItemManyWhereInput
  ): OrderItemConnection!
  """Unpublish many Order documents"""
  unpublishManyOrders(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage"""
    where: OrderManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyOrdersConnection)")
  """
  Find many Order documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyOrdersConnection(
    after: ID
    before: ID
    first: Int
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int
    skip: Int
    """Stage to find matching documents in"""
    stage: Stage = DRAFT
    """Identifies documents in draft stage"""
    where: OrderManyWhereInput
  ): OrderConnection!
  """Unpublish many ProductColorVariant documents"""
  unpublishManyProductColorVariants(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    """Locales to unpublish"""
    locales: [Locale!]
    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true
    """Identifies documents in each stage"""
    where: ProductColorVariantManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyProductColorVariantsConnection)")
  """
  Find many ProductColorVariant documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyProductColorVariantsConnection(
    after: ID
    before: ID
    first: Int
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int
    """Locales to unpublish"""
    locales: [Locale!]
    skip: Int
    """Stage to find matching documents in"""
    stage: Stage = DRAFT
    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true
    """Identifies documents in draft stage"""
    where: ProductColorVariantManyWhereInput
  ): ProductColorVariantConnection!
  """Unpublish many ProductSizeColorVariant documents"""
  unpublishManyProductSizeColorVariants(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    """Locales to unpublish"""
    locales: [Locale!]
    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true
    """Identifies documents in each stage"""
    where: ProductSizeColorVariantManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyProductSizeColorVariantsConnection)")
  """
  Find many ProductSizeColorVariant documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyProductSizeColorVariantsConnection(
    after: ID
    before: ID
    first: Int
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int
    """Locales to unpublish"""
    locales: [Locale!]
    skip: Int
    """Stage to find matching documents in"""
    stage: Stage = DRAFT
    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true
    """Identifies documents in draft stage"""
    where: ProductSizeColorVariantManyWhereInput
  ): ProductSizeColorVariantConnection!
  """Unpublish many ProductSizeVariant documents"""
  unpublishManyProductSizeVariants(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    """Locales to unpublish"""
    locales: [Locale!]
    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true
    """Identifies documents in each stage"""
    where: ProductSizeVariantManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyProductSizeVariantsConnection)")
  """
  Find many ProductSizeVariant documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyProductSizeVariantsConnection(
    after: ID
    before: ID
    first: Int
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int
    """Locales to unpublish"""
    locales: [Locale!]
    skip: Int
    """Stage to find matching documents in"""
    stage: Stage = DRAFT
    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true
    """Identifies documents in draft stage"""
    where: ProductSizeVariantManyWhereInput
  ): ProductSizeVariantConnection!
  """Unpublish many Product documents"""
  unpublishManyProducts(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    """Locales to unpublish"""
    locales: [Locale!]
    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true
    """Identifies documents in each stage"""
    where: ProductManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyProductsConnection)")
  """
  Find many Product documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyProductsConnection(
    after: ID
    before: ID
    first: Int
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int
    """Locales to unpublish"""
    locales: [Locale!]
    skip: Int
    """Stage to find matching documents in"""
    stage: Stage = DRAFT
    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true
    """Identifies documents in draft stage"""
    where: ProductManyWhereInput
  ): ProductConnection!
  """Unpublish many Review documents"""
  unpublishManyReviews(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    """Identifies documents in each stage"""
    where: ReviewManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyReviewsConnection)")
  """
  Find many Review documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyReviewsConnection(
    after: ID
    before: ID
    first: Int
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    last: Int
    skip: Int
    """Stage to find matching documents in"""
    stage: Stage = DRAFT
    """Identifies documents in draft stage"""
    where: ReviewManyWhereInput
  ): ReviewConnection!
  """
  Unpublish one order from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishOrder(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """Document to unpublish"""
    where: OrderWhereUniqueInput!
  ): Order
  """
  Unpublish one orderItem from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishOrderItem(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """Document to unpublish"""
    where: OrderItemWhereUniqueInput!
  ): OrderItem
  """
  Unpublish one product from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishProduct(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
    """Document to unpublish"""
    where: ProductWhereUniqueInput!
  ): Product
  """
  Unpublish one productColorVariant from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishProductColorVariant(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
    """Document to unpublish"""
    where: ProductColorVariantWhereUniqueInput!
  ): ProductColorVariant
  """
  Unpublish one productSizeColorVariant from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishProductSizeColorVariant(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
    """Document to unpublish"""
    where: ProductSizeColorVariantWhereUniqueInput!
  ): ProductSizeColorVariant
  """
  Unpublish one productSizeVariant from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishProductSizeVariant(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
    """Document to unpublish"""
    where: ProductSizeVariantWhereUniqueInput!
  ): ProductSizeVariant
  """
  Unpublish one review from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishReview(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
    """Document to unpublish"""
    where: ReviewWhereUniqueInput!
  ): Review
  """Update one asset"""
  updateAsset(data: AssetUpdateInput!, where: AssetWhereUniqueInput!): Asset
  """Update one category"""
  updateCategory(data: CategoryUpdateInput!, where: CategoryWhereUniqueInput!): Category
  """Update one collection"""
  updateCollection(data: CollectionUpdateInput!, where: CollectionWhereUniqueInput!): Collection
  """Update one currency"""
  updateCurrency(data: CurrencyUpdateInput!, where: CurrencyWhereUniqueInput!): Currency
  """Update many assets"""
  updateManyAssets(
    """Updates to document content"""
    data: AssetUpdateManyInput!
    """Documents to apply update on"""
    where: AssetManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyAssetsConnection)")
  """Update many Asset documents"""
  updateManyAssetsConnection(
    after: ID
    before: ID
    """Updates to document content"""
    data: AssetUpdateManyInput!
    first: Int
    last: Int
    skip: Int
    """Documents to apply update on"""
    where: AssetManyWhereInput
  ): AssetConnection!
  """Update many categories"""
  updateManyCategories(
    """Updates to document content"""
    data: CategoryUpdateManyInput!
    """Documents to apply update on"""
    where: CategoryManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyCategoriesConnection)")
  """Update many Category documents"""
  updateManyCategoriesConnection(
    after: ID
    before: ID
    """Updates to document content"""
    data: CategoryUpdateManyInput!
    first: Int
    last: Int
    skip: Int
    """Documents to apply update on"""
    where: CategoryManyWhereInput
  ): CategoryConnection!
  """Update many collections"""
  updateManyCollections(
    """Updates to document content"""
    data: CollectionUpdateManyInput!
    """Documents to apply update on"""
    where: CollectionManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyCollectionsConnection)")
  """Update many Collection documents"""
  updateManyCollectionsConnection(
    after: ID
    before: ID
    """Updates to document content"""
    data: CollectionUpdateManyInput!
    first: Int
    last: Int
    skip: Int
    """Documents to apply update on"""
    where: CollectionManyWhereInput
  ): CollectionConnection!
  """Update many currencies"""
  updateManyCurrencies(
    """Updates to document content"""
    data: CurrencyUpdateManyInput!
    """Documents to apply update on"""
    where: CurrencyManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyCurrenciesConnection)")
  """Update many Currency documents"""
  updateManyCurrenciesConnection(
    after: ID
    before: ID
    """Updates to document content"""
    data: CurrencyUpdateManyInput!
    first: Int
    last: Int
    skip: Int
    """Documents to apply update on"""
    where: CurrencyManyWhereInput
  ): CurrencyConnection!
  """Update many orderItems"""
  updateManyOrderItems(
    """Updates to document content"""
    data: OrderItemUpdateManyInput!
    """Documents to apply update on"""
    where: OrderItemManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyOrderItemsConnection)")
  """Update many OrderItem documents"""
  updateManyOrderItemsConnection(
    after: ID
    before: ID
    """Updates to document content"""
    data: OrderItemUpdateManyInput!
    first: Int
    last: Int
    skip: Int
    """Documents to apply update on"""
    where: OrderItemManyWhereInput
  ): OrderItemConnection!
  """Update many orders"""
  updateManyOrders(
    """Updates to document content"""
    data: OrderUpdateManyInput!
    """Documents to apply update on"""
    where: OrderManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyOrdersConnection)")
  """Update many Order documents"""
  updateManyOrdersConnection(
    after: ID
    before: ID
    """Updates to document content"""
    data: OrderUpdateManyInput!
    first: Int
    last: Int
    skip: Int
    """Documents to apply update on"""
    where: OrderManyWhereInput
  ): OrderConnection!
  """Update many productColorVariants"""
  updateManyProductColorVariants(
    """Updates to document content"""
    data: ProductColorVariantUpdateManyInput!
    """Documents to apply update on"""
    where: ProductColorVariantManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyProductColorVariantsConnection)")
  """Update many ProductColorVariant documents"""
  updateManyProductColorVariantsConnection(
    after: ID
    before: ID
    """Updates to document content"""
    data: ProductColorVariantUpdateManyInput!
    first: Int
    last: Int
    skip: Int
    """Documents to apply update on"""
    where: ProductColorVariantManyWhereInput
  ): ProductColorVariantConnection!
  """Update many productSizeColorVariants"""
  updateManyProductSizeColorVariants(
    """Updates to document content"""
    data: ProductSizeColorVariantUpdateManyInput!
    """Documents to apply update on"""
    where: ProductSizeColorVariantManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyProductSizeColorVariantsConnection)")
  """Update many ProductSizeColorVariant documents"""
  updateManyProductSizeColorVariantsConnection(
    after: ID
    before: ID
    """Updates to document content"""
    data: ProductSizeColorVariantUpdateManyInput!
    first: Int
    last: Int
    skip: Int
    """Documents to apply update on"""
    where: ProductSizeColorVariantManyWhereInput
  ): ProductSizeColorVariantConnection!
  """Update many productSizeVariants"""
  updateManyProductSizeVariants(
    """Updates to document content"""
    data: ProductSizeVariantUpdateManyInput!
    """Documents to apply update on"""
    where: ProductSizeVariantManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyProductSizeVariantsConnection)")
  """Update many ProductSizeVariant documents"""
  updateManyProductSizeVariantsConnection(
    after: ID
    before: ID
    """Updates to document content"""
    data: ProductSizeVariantUpdateManyInput!
    first: Int
    last: Int
    skip: Int
    """Documents to apply update on"""
    where: ProductSizeVariantManyWhereInput
  ): ProductSizeVariantConnection!
  """Update many products"""
  updateManyProducts(
    """Updates to document content"""
    data: ProductUpdateManyInput!
    """Documents to apply update on"""
    where: ProductManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyProductsConnection)")
  """Update many Product documents"""
  updateManyProductsConnection(
    after: ID
    before: ID
    """Updates to document content"""
    data: ProductUpdateManyInput!
    first: Int
    last: Int
    skip: Int
    """Documents to apply update on"""
    where: ProductManyWhereInput
  ): ProductConnection!
  """Update many reviews"""
  updateManyReviews(
    """Updates to document content"""
    data: ReviewUpdateManyInput!
    """Documents to apply update on"""
    where: ReviewManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyReviewsConnection)")
  """Update many Review documents"""
  updateManyReviewsConnection(
    after: ID
    before: ID
    """Updates to document content"""
    data: ReviewUpdateManyInput!
    first: Int
    last: Int
    skip: Int
    """Documents to apply update on"""
    where: ReviewManyWhereInput
  ): ReviewConnection!
  """Update one order"""
  updateOrder(data: OrderUpdateInput!, where: OrderWhereUniqueInput!): Order
  """Update one orderItem"""
  updateOrderItem(data: OrderItemUpdateInput!, where: OrderItemWhereUniqueInput!): OrderItem
  """Update one product"""
  updateProduct(data: ProductUpdateInput!, where: ProductWhereUniqueInput!): Product
  """Update one productColorVariant"""
  updateProductColorVariant(data: ProductColorVariantUpdateInput!, where: ProductColorVariantWhereUniqueInput!): ProductColorVariant
  """Update one productSizeColorVariant"""
  updateProductSizeColorVariant(data: ProductSizeColorVariantUpdateInput!, where: ProductSizeColorVariantWhereUniqueInput!): ProductSizeColorVariant
  """Update one productSizeVariant"""
  updateProductSizeVariant(data: ProductSizeVariantUpdateInput!, where: ProductSizeVariantWhereUniqueInput!): ProductSizeVariant
  """Update one review"""
  updateReview(data: ReviewUpdateInput!, where: ReviewWhereUniqueInput!): Review
  """Update one scheduledRelease"""
  updateScheduledRelease(data: ScheduledReleaseUpdateInput!, where: ScheduledReleaseWhereUniqueInput!): ScheduledRelease
  """Upsert one asset"""
  upsertAsset(upsert: AssetUpsertInput!, where: AssetWhereUniqueInput!): Asset
  """Upsert one category"""
  upsertCategory(upsert: CategoryUpsertInput!, where: CategoryWhereUniqueInput!): Category
  """Upsert one collection"""
  upsertCollection(upsert: CollectionUpsertInput!, where: CollectionWhereUniqueInput!): Collection
  """Upsert one currency"""
  upsertCurrency(upsert: CurrencyUpsertInput!, where: CurrencyWhereUniqueInput!): Currency
  """Upsert one order"""
  upsertOrder(upsert: OrderUpsertInput!, where: OrderWhereUniqueInput!): Order
  """Upsert one orderItem"""
  upsertOrderItem(upsert: OrderItemUpsertInput!, where: OrderItemWhereUniqueInput!): OrderItem
  """Upsert one product"""
  upsertProduct(upsert: ProductUpsertInput!, where: ProductWhereUniqueInput!): Product
  """Upsert one productColorVariant"""
  upsertProductColorVariant(upsert: ProductColorVariantUpsertInput!, where: ProductColorVariantWhereUniqueInput!): ProductColorVariant
  """Upsert one productSizeColorVariant"""
  upsertProductSizeColorVariant(upsert: ProductSizeColorVariantUpsertInput!, where: ProductSizeColorVariantWhereUniqueInput!): ProductSizeColorVariant
  """Upsert one productSizeVariant"""
  upsertProductSizeVariant(upsert: ProductSizeVariantUpsertInput!, where: ProductSizeVariantWhereUniqueInput!): ProductSizeVariant
  """Upsert one review"""
  upsertReview(upsert: ReviewUpsertInput!, where: ReviewWhereUniqueInput!): Review
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
  """The Stage of an object"""
  stage: Stage!
}

type Order implements Entity & Node {
  """The time the document was created"""
  createdAt: DateTime!
  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Order!]!
  email: String!
  """List of Order versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
  """The unique identifier"""
  id: ID!
  orderItems(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `orderItems` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `orderItems` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: OrderItemOrderByInput
    skip: Int
    where: OrderItemWhereInput
  ): [OrderItem!]!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!
  """System stage field"""
  stage: Stage!
  stripeCheckoutId: String!
  total: Int!
  """The time the document was updated"""
  updatedAt: DateTime!
  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input OrderConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
  """Document to connect"""
  where: OrderWhereUniqueInput!
}

"""A connection to a list of items."""
type OrderConnection {
  aggregate: Aggregate!
  """A list of edges."""
  edges: [OrderEdge!]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input OrderCreateInput {
  createdAt: DateTime
  email: String!
  orderItems: OrderItemCreateManyInlineInput
  stripeCheckoutId: String!
  total: Int!
  updatedAt: DateTime
}

input OrderCreateManyInlineInput {
  """Connect multiple existing Order documents"""
  connect: [OrderWhereUniqueInput!]
  """Create and connect multiple existing Order documents"""
  create: [OrderCreateInput!]
}

input OrderCreateOneInlineInput {
  """Connect one existing Order document"""
  connect: OrderWhereUniqueInput
  """Create and connect one Order document"""
  create: OrderCreateInput
}

"""An edge in a connection."""
type OrderEdge {
  """A cursor for use in pagination."""
  cursor: String!
  """The item at the end of the edge."""
  node: Order!
}

type OrderItem implements Entity & Node {
  """The time the document was created"""
  createdAt: DateTime!
  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [OrderItem!]!
  """List of OrderItem versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
  """The unique identifier"""
  id: ID!
  order(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `order` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `order` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Order
  product(
    """
    Sets the locale of the parent document as the first locale in the fallback locales in the query's subtree.
    
    Note that `product` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `product` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Product
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  quantity: Int!
  scheduledIn(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!
  """System stage field"""
  stage: Stage!
  total: Int!
  """The time the document was updated"""
  updatedAt: DateTime!
  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input OrderItemConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
  """Document to connect"""
  where: OrderItemWhereUniqueInput!
}

"""A connection to a list of items."""
type OrderItemConnection {
  aggregate: Aggregate!
  """A list of edges."""
  edges: [OrderItemEdge!]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input OrderItemCreateInput {
  createdAt: DateTime
  order: OrderCreateOneInlineInput
  product: ProductCreateOneInlineInput
  quantity: Int!
  total: Int!
  updatedAt: DateTime
}

input OrderItemCreateManyInlineInput {
  """Connect multiple existing OrderItem documents"""
  connect: [OrderItemWhereUniqueInput!]
  """Create and connect multiple existing OrderItem documents"""
  create: [OrderItemCreateInput!]
}

input OrderItemCreateOneInlineInput {
  """Connect one existing OrderItem document"""
  connect: OrderItemWhereUniqueInput
  """Create and connect one OrderItem document"""
  create: OrderItemCreateInput
}

"""An edge in a connection."""
type OrderItemEdge {
  """A cursor for use in pagination."""
  cursor: String!
  """The item at the end of the edge."""
  node: OrderItem!
}

"""Identifies documents"""
input OrderItemManyWhereInput {
  """Logical AND on all given filters."""
  AND: [OrderItemWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [OrderItemWhereInput!]
  """Logical OR on all given filters."""
  OR: [OrderItemWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: OrderItemWhereStageInput
  documentInStages_none: OrderItemWhereStageInput
  documentInStages_some: OrderItemWhereStageInput
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  order: OrderWhereInput
  product: ProductWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  quantity: Int
  """All values greater than the given value."""
  quantity_gt: Int
  """All values greater than or equal the given value."""
  quantity_gte: Int
  """All values that are contained in given list."""
  quantity_in: [Int]
  """All values less than the given value."""
  quantity_lt: Int
  """All values less than or equal the given value."""
  quantity_lte: Int
  """Any other value that exists and is not equal to the given value."""
  quantity_not: Int
  """All values that are not contained in given list."""
  quantity_not_in: [Int]
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  total: Int
  """All values greater than the given value."""
  total_gt: Int
  """All values greater than or equal the given value."""
  total_gte: Int
  """All values that are contained in given list."""
  total_in: [Int]
  """All values less than the given value."""
  total_lt: Int
  """All values less than or equal the given value."""
  total_lte: Int
  """Any other value that exists and is not equal to the given value."""
  total_not: Int
  """All values that are not contained in given list."""
  total_not_in: [Int]
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum OrderItemOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  publishedAt_ASC
  publishedAt_DESC
  quantity_ASC
  quantity_DESC
  total_ASC
  total_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input OrderItemUpdateInput {
  order: OrderUpdateOneInlineInput
  product: ProductUpdateOneInlineInput
  quantity: Int
  total: Int
}

input OrderItemUpdateManyInlineInput {
  """Connect multiple existing OrderItem documents"""
  connect: [OrderItemConnectInput!]
  """Create and connect multiple OrderItem documents"""
  create: [OrderItemCreateInput!]
  """Delete multiple OrderItem documents"""
  delete: [OrderItemWhereUniqueInput!]
  """Disconnect multiple OrderItem documents"""
  disconnect: [OrderItemWhereUniqueInput!]
  """
  Override currently-connected documents with multiple existing OrderItem documents
  """
  set: [OrderItemWhereUniqueInput!]
  """Update multiple OrderItem documents"""
  update: [OrderItemUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple OrderItem documents"""
  upsert: [OrderItemUpsertWithNestedWhereUniqueInput!]
}

input OrderItemUpdateManyInput {
  quantity: Int
  total: Int
}

input OrderItemUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: OrderItemUpdateManyInput!
  """Document search"""
  where: OrderItemWhereInput!
}

input OrderItemUpdateOneInlineInput {
  """Connect existing OrderItem document"""
  connect: OrderItemWhereUniqueInput
  """Create and connect one OrderItem document"""
  create: OrderItemCreateInput
  """Delete currently connected OrderItem document"""
  delete: Boolean
  """Disconnect currently connected OrderItem document"""
  disconnect: Boolean
  """Update single OrderItem document"""
  update: OrderItemUpdateWithNestedWhereUniqueInput
  """Upsert single OrderItem document"""
  upsert: OrderItemUpsertWithNestedWhereUniqueInput
}

input OrderItemUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: OrderItemUpdateInput!
  """Unique document search"""
  where: OrderItemWhereUniqueInput!
}

input OrderItemUpsertInput {
  """Create document if it didn't exist"""
  create: OrderItemCreateInput!
  """Update document if it exists"""
  update: OrderItemUpdateInput!
}

input OrderItemUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: OrderItemUpsertInput!
  """Unique document search"""
  where: OrderItemWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input OrderItemWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input OrderItemWhereInput {
  """Logical AND on all given filters."""
  AND: [OrderItemWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [OrderItemWhereInput!]
  """Logical OR on all given filters."""
  OR: [OrderItemWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: OrderItemWhereStageInput
  documentInStages_none: OrderItemWhereStageInput
  documentInStages_some: OrderItemWhereStageInput
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  order: OrderWhereInput
  product: ProductWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  quantity: Int
  """All values greater than the given value."""
  quantity_gt: Int
  """All values greater than or equal the given value."""
  quantity_gte: Int
  """All values that are contained in given list."""
  quantity_in: [Int]
  """All values less than the given value."""
  quantity_lt: Int
  """All values less than or equal the given value."""
  quantity_lte: Int
  """Any other value that exists and is not equal to the given value."""
  quantity_not: Int
  """All values that are not contained in given list."""
  quantity_not_in: [Int]
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  total: Int
  """All values greater than the given value."""
  total_gt: Int
  """All values greater than or equal the given value."""
  total_gte: Int
  """All values that are contained in given list."""
  total_in: [Int]
  """All values less than the given value."""
  total_lt: Int
  """All values less than or equal the given value."""
  total_lte: Int
  """Any other value that exists and is not equal to the given value."""
  total_not: Int
  """All values that are not contained in given list."""
  total_not_in: [Int]
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input OrderItemWhereStageInput {
  """Logical AND on all given filters."""
  AND: [OrderItemWhereStageInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [OrderItemWhereStageInput!]
  """Logical OR on all given filters."""
  OR: [OrderItemWhereStageInput!]
  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: OrderItemWhereComparatorInput
  """Specify the stage to compare with"""
  stage: Stage
}

"""References OrderItem record uniquely"""
input OrderItemWhereUniqueInput {
  id: ID
}

"""Identifies documents"""
input OrderManyWhereInput {
  """Logical AND on all given filters."""
  AND: [OrderWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [OrderWhereInput!]
  """Logical OR on all given filters."""
  OR: [OrderWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: OrderWhereStageInput
  documentInStages_none: OrderWhereStageInput
  documentInStages_some: OrderWhereStageInput
  email: String
  """All values containing the given string."""
  email_contains: String
  """All values ending with the given string."""
  email_ends_with: String
  """All values that are contained in given list."""
  email_in: [String]
  """Any other value that exists and is not equal to the given value."""
  email_not: String
  """All values not containing the given string."""
  email_not_contains: String
  """All values not ending with the given string"""
  email_not_ends_with: String
  """All values that are not contained in given list."""
  email_not_in: [String]
  """All values not starting with the given string."""
  email_not_starts_with: String
  """All values starting with the given string."""
  email_starts_with: String
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  orderItems_every: OrderItemWhereInput
  orderItems_none: OrderItemWhereInput
  orderItems_some: OrderItemWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  stripeCheckoutId: String
  """All values containing the given string."""
  stripeCheckoutId_contains: String
  """All values ending with the given string."""
  stripeCheckoutId_ends_with: String
  """All values that are contained in given list."""
  stripeCheckoutId_in: [String]
  """Any other value that exists and is not equal to the given value."""
  stripeCheckoutId_not: String
  """All values not containing the given string."""
  stripeCheckoutId_not_contains: String
  """All values not ending with the given string"""
  stripeCheckoutId_not_ends_with: String
  """All values that are not contained in given list."""
  stripeCheckoutId_not_in: [String]
  """All values not starting with the given string."""
  stripeCheckoutId_not_starts_with: String
  """All values starting with the given string."""
  stripeCheckoutId_starts_with: String
  total: Int
  """All values greater than the given value."""
  total_gt: Int
  """All values greater than or equal the given value."""
  total_gte: Int
  """All values that are contained in given list."""
  total_in: [Int]
  """All values less than the given value."""
  total_lt: Int
  """All values less than or equal the given value."""
  total_lte: Int
  """Any other value that exists and is not equal to the given value."""
  total_not: Int
  """All values that are not contained in given list."""
  total_not_in: [Int]
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum OrderOrderByInput {
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  id_ASC
  id_DESC
  publishedAt_ASC
  publishedAt_DESC
  stripeCheckoutId_ASC
  stripeCheckoutId_DESC
  total_ASC
  total_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input OrderUpdateInput {
  email: String
  orderItems: OrderItemUpdateManyInlineInput
  stripeCheckoutId: String
  total: Int
}

input OrderUpdateManyInlineInput {
  """Connect multiple existing Order documents"""
  connect: [OrderConnectInput!]
  """Create and connect multiple Order documents"""
  create: [OrderCreateInput!]
  """Delete multiple Order documents"""
  delete: [OrderWhereUniqueInput!]
  """Disconnect multiple Order documents"""
  disconnect: [OrderWhereUniqueInput!]
  """
  Override currently-connected documents with multiple existing Order documents
  """
  set: [OrderWhereUniqueInput!]
  """Update multiple Order documents"""
  update: [OrderUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Order documents"""
  upsert: [OrderUpsertWithNestedWhereUniqueInput!]
}

input OrderUpdateManyInput {
  email: String
  stripeCheckoutId: String
  total: Int
}

input OrderUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: OrderUpdateManyInput!
  """Document search"""
  where: OrderWhereInput!
}

input OrderUpdateOneInlineInput {
  """Connect existing Order document"""
  connect: OrderWhereUniqueInput
  """Create and connect one Order document"""
  create: OrderCreateInput
  """Delete currently connected Order document"""
  delete: Boolean
  """Disconnect currently connected Order document"""
  disconnect: Boolean
  """Update single Order document"""
  update: OrderUpdateWithNestedWhereUniqueInput
  """Upsert single Order document"""
  upsert: OrderUpsertWithNestedWhereUniqueInput
}

input OrderUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: OrderUpdateInput!
  """Unique document search"""
  where: OrderWhereUniqueInput!
}

input OrderUpsertInput {
  """Create document if it didn't exist"""
  create: OrderCreateInput!
  """Update document if it exists"""
  update: OrderUpdateInput!
}

input OrderUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: OrderUpsertInput!
  """Unique document search"""
  where: OrderWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input OrderWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input OrderWhereInput {
  """Logical AND on all given filters."""
  AND: [OrderWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [OrderWhereInput!]
  """Logical OR on all given filters."""
  OR: [OrderWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: OrderWhereStageInput
  documentInStages_none: OrderWhereStageInput
  documentInStages_some: OrderWhereStageInput
  email: String
  """All values containing the given string."""
  email_contains: String
  """All values ending with the given string."""
  email_ends_with: String
  """All values that are contained in given list."""
  email_in: [String]
  """Any other value that exists and is not equal to the given value."""
  email_not: String
  """All values not containing the given string."""
  email_not_contains: String
  """All values not ending with the given string"""
  email_not_ends_with: String
  """All values that are not contained in given list."""
  email_not_in: [String]
  """All values not starting with the given string."""
  email_not_starts_with: String
  """All values starting with the given string."""
  email_starts_with: String
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  orderItems_every: OrderItemWhereInput
  orderItems_none: OrderItemWhereInput
  orderItems_some: OrderItemWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  stripeCheckoutId: String
  """All values containing the given string."""
  stripeCheckoutId_contains: String
  """All values ending with the given string."""
  stripeCheckoutId_ends_with: String
  """All values that are contained in given list."""
  stripeCheckoutId_in: [String]
  """Any other value that exists and is not equal to the given value."""
  stripeCheckoutId_not: String
  """All values not containing the given string."""
  stripeCheckoutId_not_contains: String
  """All values not ending with the given string"""
  stripeCheckoutId_not_ends_with: String
  """All values that are not contained in given list."""
  stripeCheckoutId_not_in: [String]
  """All values not starting with the given string."""
  stripeCheckoutId_not_starts_with: String
  """All values starting with the given string."""
  stripeCheckoutId_starts_with: String
  total: Int
  """All values greater than the given value."""
  total_gt: Int
  """All values greater than or equal the given value."""
  total_gte: Int
  """All values that are contained in given list."""
  total_in: [Int]
  """All values less than the given value."""
  total_lt: Int
  """All values less than or equal the given value."""
  total_lte: Int
  """Any other value that exists and is not equal to the given value."""
  total_not: Int
  """All values that are not contained in given list."""
  total_not_in: [Int]
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input OrderWhereStageInput {
  """Logical AND on all given filters."""
  AND: [OrderWhereStageInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [OrderWhereStageInput!]
  """Logical OR on all given filters."""
  OR: [OrderWhereStageInput!]
  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: OrderWhereComparatorInput
  """Specify the stage to compare with"""
  stage: Stage
}

"""References Order record uniquely"""
input OrderWhereUniqueInput {
  id: ID
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """Number of items in the current page."""
  pageSize: Int
  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

type Product implements Entity & Node {
  categories(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the parent document as the first locale in the fallback locales in the query's subtree.
    
    Note that `categories` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `categories` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: CategoryOrderByInput
    skip: Int
    where: CategoryWhereInput
  ): [Category!]!
  collections(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the parent document as the first locale in the fallback locales in the query's subtree.
    
    Note that `collections` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `collections` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: CollectionOrderByInput
    skip: Int
    where: CollectionWhereInput
  ): [Collection!]!
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  description: String!
  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Product!]!
  """List of Product versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
  """The unique identifier"""
  id: ID!
  images(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the parent document as the first locale in the fallback locales in the query's subtree.
    
    Note that `images` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `images` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: AssetOrderByInput
    skip: Int
    where: AssetWhereInput
  ): [Asset!]!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
    """
    Potential locales that should be returned.
    
    The order of locales will also override locale fall-backing behaviour in the query's subtree.
    
    Note any related model with localized fields in the query's subtree will be affected.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    
    Consider using this in conjunction with forceParentLocale on the children relation fields.
    """
    locales: [Locale!]! = [en, de]
  ): [Product!]!
  name: String!
  orderItems(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `orderItems` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `orderItems` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: OrderItemOrderByInput
    skip: Int
    where: OrderItemWhereInput
  ): [OrderItem!]!
  price: Int!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  reviews(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `reviews` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `reviews` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: ReviewOrderByInput
    skip: Int
    where: ReviewWhereInput
  ): [Review!]!
  scheduledIn(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!
  slug: String!
  """System stage field"""
  stage: Stage!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  variants(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `variants` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `variants` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
  ): [ProductVariants!]!
}

enum ProductColor {
  BLACK
  PINK
  PURPLE
}

type ProductColorVariant implements Entity & Node {
  color: ProductColor!
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [ProductColorVariant!]!
  """List of ProductColorVariant versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
  """The unique identifier"""
  id: ID!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
    """
    Potential locales that should be returned.
    
    The order of locales will also override locale fall-backing behaviour in the query's subtree.
    
    Note any related model with localized fields in the query's subtree will be affected.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    
    Consider using this in conjunction with forceParentLocale on the children relation fields.
    """
    locales: [Locale!]! = [en, de]
  ): [ProductColorVariant!]!
  name: String!
  product(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `product` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `product` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Product
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!
  """System stage field"""
  stage: Stage!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input ProductColorVariantConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
  """Document to connect"""
  where: ProductColorVariantWhereUniqueInput!
}

"""A connection to a list of items."""
type ProductColorVariantConnection {
  aggregate: Aggregate!
  """A list of edges."""
  edges: [ProductColorVariantEdge!]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input ProductColorVariantCreateInput {
  color: ProductColor!
  createdAt: DateTime
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: ProductColorVariantCreateLocalizationsInput
  """name input for default locale (en)"""
  name: String!
  product: ProductCreateOneInlineInput
  updatedAt: DateTime
}

input ProductColorVariantCreateLocalizationDataInput {
  createdAt: DateTime
  name: String!
  updatedAt: DateTime
}

input ProductColorVariantCreateLocalizationInput {
  """Localization input"""
  data: ProductColorVariantCreateLocalizationDataInput!
  locale: Locale!
}

input ProductColorVariantCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [ProductColorVariantCreateLocalizationInput!]
}

input ProductColorVariantCreateManyInlineInput {
  """Connect multiple existing ProductColorVariant documents"""
  connect: [ProductColorVariantWhereUniqueInput!]
  """Create and connect multiple existing ProductColorVariant documents"""
  create: [ProductColorVariantCreateInput!]
}

input ProductColorVariantCreateOneInlineInput {
  """Connect one existing ProductColorVariant document"""
  connect: ProductColorVariantWhereUniqueInput
  """Create and connect one ProductColorVariant document"""
  create: ProductColorVariantCreateInput
}

"""An edge in a connection."""
type ProductColorVariantEdge {
  """A cursor for use in pagination."""
  cursor: String!
  """The item at the end of the edge."""
  node: ProductColorVariant!
}

"""Identifies documents"""
input ProductColorVariantManyWhereInput {
  """Logical AND on all given filters."""
  AND: [ProductColorVariantWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ProductColorVariantWhereInput!]
  """Logical OR on all given filters."""
  OR: [ProductColorVariantWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  color: ProductColor
  """All values that are contained in given list."""
  color_in: [ProductColor]
  """Any other value that exists and is not equal to the given value."""
  color_not: ProductColor
  """All values that are not contained in given list."""
  color_not_in: [ProductColor]
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: ProductColorVariantWhereStageInput
  documentInStages_none: ProductColorVariantWhereStageInput
  documentInStages_some: ProductColorVariantWhereStageInput
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  product: ProductWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum ProductColorVariantOrderByInput {
  color_ASC
  color_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ProductColorVariantUpdateInput {
  color: ProductColor
  """Manage document localizations"""
  localizations: ProductColorVariantUpdateLocalizationsInput
  """name input for default locale (en)"""
  name: String
  product: ProductUpdateOneInlineInput
}

input ProductColorVariantUpdateLocalizationDataInput {
  name: String
}

input ProductColorVariantUpdateLocalizationInput {
  data: ProductColorVariantUpdateLocalizationDataInput!
  locale: Locale!
}

input ProductColorVariantUpdateLocalizationsInput {
  """Localizations to create"""
  create: [ProductColorVariantCreateLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
  """Localizations to update"""
  update: [ProductColorVariantUpdateLocalizationInput!]
  upsert: [ProductColorVariantUpsertLocalizationInput!]
}

input ProductColorVariantUpdateManyInlineInput {
  """Connect multiple existing ProductColorVariant documents"""
  connect: [ProductColorVariantConnectInput!]
  """Create and connect multiple ProductColorVariant documents"""
  create: [ProductColorVariantCreateInput!]
  """Delete multiple ProductColorVariant documents"""
  delete: [ProductColorVariantWhereUniqueInput!]
  """Disconnect multiple ProductColorVariant documents"""
  disconnect: [ProductColorVariantWhereUniqueInput!]
  """
  Override currently-connected documents with multiple existing ProductColorVariant documents
  """
  set: [ProductColorVariantWhereUniqueInput!]
  """Update multiple ProductColorVariant documents"""
  update: [ProductColorVariantUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple ProductColorVariant documents"""
  upsert: [ProductColorVariantUpsertWithNestedWhereUniqueInput!]
}

input ProductColorVariantUpdateManyInput {
  color: ProductColor
  """Optional updates to localizations"""
  localizations: ProductColorVariantUpdateManyLocalizationsInput
  """name input for default locale (en)"""
  name: String
}

input ProductColorVariantUpdateManyLocalizationDataInput {
  name: String
}

input ProductColorVariantUpdateManyLocalizationInput {
  data: ProductColorVariantUpdateManyLocalizationDataInput!
  locale: Locale!
}

input ProductColorVariantUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [ProductColorVariantUpdateManyLocalizationInput!]
}

input ProductColorVariantUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: ProductColorVariantUpdateManyInput!
  """Document search"""
  where: ProductColorVariantWhereInput!
}

input ProductColorVariantUpdateOneInlineInput {
  """Connect existing ProductColorVariant document"""
  connect: ProductColorVariantWhereUniqueInput
  """Create and connect one ProductColorVariant document"""
  create: ProductColorVariantCreateInput
  """Delete currently connected ProductColorVariant document"""
  delete: Boolean
  """Disconnect currently connected ProductColorVariant document"""
  disconnect: Boolean
  """Update single ProductColorVariant document"""
  update: ProductColorVariantUpdateWithNestedWhereUniqueInput
  """Upsert single ProductColorVariant document"""
  upsert: ProductColorVariantUpsertWithNestedWhereUniqueInput
}

input ProductColorVariantUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: ProductColorVariantUpdateInput!
  """Unique document search"""
  where: ProductColorVariantWhereUniqueInput!
}

input ProductColorVariantUpsertInput {
  """Create document if it didn't exist"""
  create: ProductColorVariantCreateInput!
  """Update document if it exists"""
  update: ProductColorVariantUpdateInput!
}

input ProductColorVariantUpsertLocalizationInput {
  create: ProductColorVariantCreateLocalizationDataInput!
  locale: Locale!
  update: ProductColorVariantUpdateLocalizationDataInput!
}

input ProductColorVariantUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: ProductColorVariantUpsertInput!
  """Unique document search"""
  where: ProductColorVariantWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input ProductColorVariantWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input ProductColorVariantWhereInput {
  """Logical AND on all given filters."""
  AND: [ProductColorVariantWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ProductColorVariantWhereInput!]
  """Logical OR on all given filters."""
  OR: [ProductColorVariantWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  color: ProductColor
  """All values that are contained in given list."""
  color_in: [ProductColor]
  """Any other value that exists and is not equal to the given value."""
  color_not: ProductColor
  """All values that are not contained in given list."""
  color_not_in: [ProductColor]
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: ProductColorVariantWhereStageInput
  documentInStages_none: ProductColorVariantWhereStageInput
  documentInStages_some: ProductColorVariantWhereStageInput
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  name: String
  """All values containing the given string."""
  name_contains: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values that are contained in given list."""
  name_in: [String]
  """Any other value that exists and is not equal to the given value."""
  name_not: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  """All values that are not contained in given list."""
  name_not_in: [String]
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values starting with the given string."""
  name_starts_with: String
  product: ProductWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input ProductColorVariantWhereStageInput {
  """Logical AND on all given filters."""
  AND: [ProductColorVariantWhereStageInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ProductColorVariantWhereStageInput!]
  """Logical OR on all given filters."""
  OR: [ProductColorVariantWhereStageInput!]
  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: ProductColorVariantWhereComparatorInput
  """Specify the stage to compare with"""
  stage: Stage
}

"""References ProductColorVariant record uniquely"""
input ProductColorVariantWhereUniqueInput {
  id: ID
}

input ProductConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
  """Document to connect"""
  where: ProductWhereUniqueInput!
}

"""A connection to a list of items."""
type ProductConnection {
  aggregate: Aggregate!
  """A list of edges."""
  edges: [ProductEdge!]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input ProductCreateInput {
  categories: CategoryCreateManyInlineInput
  collections: CollectionCreateManyInlineInput
  createdAt: DateTime
  """description input for default locale (en)"""
  description: String!
  images: AssetCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: ProductCreateLocalizationsInput
  """name input for default locale (en)"""
  name: String!
  orderItems: OrderItemCreateManyInlineInput
  """price input for default locale (en)"""
  price: Int!
  reviews: ReviewCreateManyInlineInput
  """slug input for default locale (en)"""
  slug: String!
  updatedAt: DateTime
  variants: ProductVariantsCreateManyInlineInput
}

input ProductCreateLocalizationDataInput {
  createdAt: DateTime
  description: String!
  name: String!
  price: Int!
  slug: String!
  updatedAt: DateTime
}

input ProductCreateLocalizationInput {
  """Localization input"""
  data: ProductCreateLocalizationDataInput!
  locale: Locale!
}

input ProductCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [ProductCreateLocalizationInput!]
}

input ProductCreateManyInlineInput {
  """Connect multiple existing Product documents"""
  connect: [ProductWhereUniqueInput!]
  """Create and connect multiple existing Product documents"""
  create: [ProductCreateInput!]
}

input ProductCreateOneInlineInput {
  """Connect one existing Product document"""
  connect: ProductWhereUniqueInput
  """Create and connect one Product document"""
  create: ProductCreateInput
}

"""An edge in a connection."""
type ProductEdge {
  """A cursor for use in pagination."""
  cursor: String!
  """The item at the end of the edge."""
  node: Product!
}

"""Identifies documents"""
input ProductManyWhereInput {
  """Logical AND on all given filters."""
  AND: [ProductWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ProductWhereInput!]
  """Logical OR on all given filters."""
  OR: [ProductWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  categories_every: CategoryWhereInput
  categories_none: CategoryWhereInput
  categories_some: CategoryWhereInput
  collections_every: CollectionWhereInput
  collections_none: CollectionWhereInput
  collections_some: CollectionWhereInput
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: ProductWhereStageInput
  documentInStages_none: ProductWhereStageInput
  documentInStages_some: ProductWhereStageInput
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  images_every: AssetWhereInput
  images_none: AssetWhereInput
  images_some: AssetWhereInput
  orderItems_every: OrderItemWhereInput
  orderItems_none: OrderItemWhereInput
  orderItems_some: OrderItemWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  reviews_every: ReviewWhereInput
  reviews_none: ReviewWhereInput
  reviews_some: ReviewWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
  """All values in which the union is empty"""
  variants_empty: Boolean
  """
  Matches if the union contains at least one connection to the provided item to the filter
  """
  variants_some: ProductVariantsWhereInput
}

enum ProductOrderByInput {
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  publishedAt_ASC
  publishedAt_DESC
  slug_ASC
  slug_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum ProductSize {
  LARGE
  MEDIUM
  SMALL
  XL
  XS
}

type ProductSizeColorVariant implements Entity & Node {
  color: ProductColor!
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [ProductSizeColorVariant!]!
  """List of ProductSizeColorVariant versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
  """The unique identifier"""
  id: ID!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
    """
    Potential locales that should be returned.
    
    The order of locales will also override locale fall-backing behaviour in the query's subtree.
    
    Note any related model with localized fields in the query's subtree will be affected.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    
    Consider using this in conjunction with forceParentLocale on the children relation fields.
    """
    locales: [Locale!]! = [en, de]
  ): [ProductSizeColorVariant!]!
  name: String!
  product(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `product` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `product` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Product
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!
  size: ProductSize!
  """System stage field"""
  stage: Stage!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input ProductSizeColorVariantConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
  """Document to connect"""
  where: ProductSizeColorVariantWhereUniqueInput!
}

"""A connection to a list of items."""
type ProductSizeColorVariantConnection {
  aggregate: Aggregate!
  """A list of edges."""
  edges: [ProductSizeColorVariantEdge!]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input ProductSizeColorVariantCreateInput {
  color: ProductColor!
  createdAt: DateTime
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: ProductSizeColorVariantCreateLocalizationsInput
  """name input for default locale (en)"""
  name: String!
  product: ProductCreateOneInlineInput
  size: ProductSize!
  updatedAt: DateTime
}

input ProductSizeColorVariantCreateLocalizationDataInput {
  createdAt: DateTime
  name: String!
  updatedAt: DateTime
}

input ProductSizeColorVariantCreateLocalizationInput {
  """Localization input"""
  data: ProductSizeColorVariantCreateLocalizationDataInput!
  locale: Locale!
}

input ProductSizeColorVariantCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [ProductSizeColorVariantCreateLocalizationInput!]
}

input ProductSizeColorVariantCreateManyInlineInput {
  """Connect multiple existing ProductSizeColorVariant documents"""
  connect: [ProductSizeColorVariantWhereUniqueInput!]
  """Create and connect multiple existing ProductSizeColorVariant documents"""
  create: [ProductSizeColorVariantCreateInput!]
}

input ProductSizeColorVariantCreateOneInlineInput {
  """Connect one existing ProductSizeColorVariant document"""
  connect: ProductSizeColorVariantWhereUniqueInput
  """Create and connect one ProductSizeColorVariant document"""
  create: ProductSizeColorVariantCreateInput
}

"""An edge in a connection."""
type ProductSizeColorVariantEdge {
  """A cursor for use in pagination."""
  cursor: String!
  """The item at the end of the edge."""
  node: ProductSizeColorVariant!
}

"""Identifies documents"""
input ProductSizeColorVariantManyWhereInput {
  """Logical AND on all given filters."""
  AND: [ProductSizeColorVariantWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ProductSizeColorVariantWhereInput!]
  """Logical OR on all given filters."""
  OR: [ProductSizeColorVariantWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  color: ProductColor
  """All values that are contained in given list."""
  color_in: [ProductColor]
  """Any other value that exists and is not equal to the given value."""
  color_not: ProductColor
  """All values that are not contained in given list."""
  color_not_in: [ProductColor]
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: ProductSizeColorVariantWhereStageInput
  documentInStages_none: ProductSizeColorVariantWhereStageInput
  documentInStages_some: ProductSizeColorVariantWhereStageInput
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  product: ProductWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  size: ProductSize
  """All values that are contained in given list."""
  size_in: [ProductSize]
  """Any other value that exists and is not equal to the given value."""
  size_not: ProductSize
  """All values that are not contained in given list."""
  size_not_in: [ProductSize]
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum ProductSizeColorVariantOrderByInput {
  color_ASC
  color_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  publishedAt_ASC
  publishedAt_DESC
  size_ASC
  size_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ProductSizeColorVariantUpdateInput {
  color: ProductColor
  """Manage document localizations"""
  localizations: ProductSizeColorVariantUpdateLocalizationsInput
  """name input for default locale (en)"""
  name: String
  product: ProductUpdateOneInlineInput
  size: ProductSize
}

input ProductSizeColorVariantUpdateLocalizationDataInput {
  name: String
}

input ProductSizeColorVariantUpdateLocalizationInput {
  data: ProductSizeColorVariantUpdateLocalizationDataInput!
  locale: Locale!
}

input ProductSizeColorVariantUpdateLocalizationsInput {
  """Localizations to create"""
  create: [ProductSizeColorVariantCreateLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
  """Localizations to update"""
  update: [ProductSizeColorVariantUpdateLocalizationInput!]
  upsert: [ProductSizeColorVariantUpsertLocalizationInput!]
}

input ProductSizeColorVariantUpdateManyInlineInput {
  """Connect multiple existing ProductSizeColorVariant documents"""
  connect: [ProductSizeColorVariantConnectInput!]
  """Create and connect multiple ProductSizeColorVariant documents"""
  create: [ProductSizeColorVariantCreateInput!]
  """Delete multiple ProductSizeColorVariant documents"""
  delete: [ProductSizeColorVariantWhereUniqueInput!]
  """Disconnect multiple ProductSizeColorVariant documents"""
  disconnect: [ProductSizeColorVariantWhereUniqueInput!]
  """
  Override currently-connected documents with multiple existing ProductSizeColorVariant documents
  """
  set: [ProductSizeColorVariantWhereUniqueInput!]
  """Update multiple ProductSizeColorVariant documents"""
  update: [ProductSizeColorVariantUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple ProductSizeColorVariant documents"""
  upsert: [ProductSizeColorVariantUpsertWithNestedWhereUniqueInput!]
}

input ProductSizeColorVariantUpdateManyInput {
  color: ProductColor
  """Optional updates to localizations"""
  localizations: ProductSizeColorVariantUpdateManyLocalizationsInput
  """name input for default locale (en)"""
  name: String
  size: ProductSize
}

input ProductSizeColorVariantUpdateManyLocalizationDataInput {
  name: String
}

input ProductSizeColorVariantUpdateManyLocalizationInput {
  data: ProductSizeColorVariantUpdateManyLocalizationDataInput!
  locale: Locale!
}

input ProductSizeColorVariantUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [ProductSizeColorVariantUpdateManyLocalizationInput!]
}

input ProductSizeColorVariantUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: ProductSizeColorVariantUpdateManyInput!
  """Document search"""
  where: ProductSizeColorVariantWhereInput!
}

input ProductSizeColorVariantUpdateOneInlineInput {
  """Connect existing ProductSizeColorVariant document"""
  connect: ProductSizeColorVariantWhereUniqueInput
  """Create and connect one ProductSizeColorVariant document"""
  create: ProductSizeColorVariantCreateInput
  """Delete currently connected ProductSizeColorVariant document"""
  delete: Boolean
  """Disconnect currently connected ProductSizeColorVariant document"""
  disconnect: Boolean
  """Update single ProductSizeColorVariant document"""
  update: ProductSizeColorVariantUpdateWithNestedWhereUniqueInput
  """Upsert single ProductSizeColorVariant document"""
  upsert: ProductSizeColorVariantUpsertWithNestedWhereUniqueInput
}

input ProductSizeColorVariantUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: ProductSizeColorVariantUpdateInput!
  """Unique document search"""
  where: ProductSizeColorVariantWhereUniqueInput!
}

input ProductSizeColorVariantUpsertInput {
  """Create document if it didn't exist"""
  create: ProductSizeColorVariantCreateInput!
  """Update document if it exists"""
  update: ProductSizeColorVariantUpdateInput!
}

input ProductSizeColorVariantUpsertLocalizationInput {
  create: ProductSizeColorVariantCreateLocalizationDataInput!
  locale: Locale!
  update: ProductSizeColorVariantUpdateLocalizationDataInput!
}

input ProductSizeColorVariantUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: ProductSizeColorVariantUpsertInput!
  """Unique document search"""
  where: ProductSizeColorVariantWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input ProductSizeColorVariantWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input ProductSizeColorVariantWhereInput {
  """Logical AND on all given filters."""
  AND: [ProductSizeColorVariantWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ProductSizeColorVariantWhereInput!]
  """Logical OR on all given filters."""
  OR: [ProductSizeColorVariantWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  color: ProductColor
  """All values that are contained in given list."""
  color_in: [ProductColor]
  """Any other value that exists and is not equal to the given value."""
  color_not: ProductColor
  """All values that are not contained in given list."""
  color_not_in: [ProductColor]
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: ProductSizeColorVariantWhereStageInput
  documentInStages_none: ProductSizeColorVariantWhereStageInput
  documentInStages_some: ProductSizeColorVariantWhereStageInput
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  name: String
  """All values containing the given string."""
  name_contains: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values that are contained in given list."""
  name_in: [String]
  """Any other value that exists and is not equal to the given value."""
  name_not: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  """All values that are not contained in given list."""
  name_not_in: [String]
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values starting with the given string."""
  name_starts_with: String
  product: ProductWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  size: ProductSize
  """All values that are contained in given list."""
  size_in: [ProductSize]
  """Any other value that exists and is not equal to the given value."""
  size_not: ProductSize
  """All values that are not contained in given list."""
  size_not_in: [ProductSize]
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input ProductSizeColorVariantWhereStageInput {
  """Logical AND on all given filters."""
  AND: [ProductSizeColorVariantWhereStageInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ProductSizeColorVariantWhereStageInput!]
  """Logical OR on all given filters."""
  OR: [ProductSizeColorVariantWhereStageInput!]
  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: ProductSizeColorVariantWhereComparatorInput
  """Specify the stage to compare with"""
  stage: Stage
}

"""References ProductSizeColorVariant record uniquely"""
input ProductSizeColorVariantWhereUniqueInput {
  id: ID
}

type ProductSizeVariant implements Entity & Node {
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [ProductSizeVariant!]!
  """List of ProductSizeVariant versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
  """The unique identifier"""
  id: ID!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
    """
    Potential locales that should be returned.
    
    The order of locales will also override locale fall-backing behaviour in the query's subtree.
    
    Note any related model with localized fields in the query's subtree will be affected.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    
    Consider using this in conjunction with forceParentLocale on the children relation fields.
    """
    locales: [Locale!]! = [en, de]
  ): [ProductSizeVariant!]!
  name: String!
  product(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `product` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `product` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Product
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!
  size: ProductSize!
  """System stage field"""
  stage: Stage!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input ProductSizeVariantConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
  """Document to connect"""
  where: ProductSizeVariantWhereUniqueInput!
}

"""A connection to a list of items."""
type ProductSizeVariantConnection {
  aggregate: Aggregate!
  """A list of edges."""
  edges: [ProductSizeVariantEdge!]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input ProductSizeVariantCreateInput {
  createdAt: DateTime
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: ProductSizeVariantCreateLocalizationsInput
  """name input for default locale (en)"""
  name: String!
  product: ProductCreateOneInlineInput
  size: ProductSize!
  updatedAt: DateTime
}

input ProductSizeVariantCreateLocalizationDataInput {
  createdAt: DateTime
  name: String!
  updatedAt: DateTime
}

input ProductSizeVariantCreateLocalizationInput {
  """Localization input"""
  data: ProductSizeVariantCreateLocalizationDataInput!
  locale: Locale!
}

input ProductSizeVariantCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [ProductSizeVariantCreateLocalizationInput!]
}

input ProductSizeVariantCreateManyInlineInput {
  """Connect multiple existing ProductSizeVariant documents"""
  connect: [ProductSizeVariantWhereUniqueInput!]
  """Create and connect multiple existing ProductSizeVariant documents"""
  create: [ProductSizeVariantCreateInput!]
}

input ProductSizeVariantCreateOneInlineInput {
  """Connect one existing ProductSizeVariant document"""
  connect: ProductSizeVariantWhereUniqueInput
  """Create and connect one ProductSizeVariant document"""
  create: ProductSizeVariantCreateInput
}

"""An edge in a connection."""
type ProductSizeVariantEdge {
  """A cursor for use in pagination."""
  cursor: String!
  """The item at the end of the edge."""
  node: ProductSizeVariant!
}

"""Identifies documents"""
input ProductSizeVariantManyWhereInput {
  """Logical AND on all given filters."""
  AND: [ProductSizeVariantWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ProductSizeVariantWhereInput!]
  """Logical OR on all given filters."""
  OR: [ProductSizeVariantWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: ProductSizeVariantWhereStageInput
  documentInStages_none: ProductSizeVariantWhereStageInput
  documentInStages_some: ProductSizeVariantWhereStageInput
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  product: ProductWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  size: ProductSize
  """All values that are contained in given list."""
  size_in: [ProductSize]
  """Any other value that exists and is not equal to the given value."""
  size_not: ProductSize
  """All values that are not contained in given list."""
  size_not_in: [ProductSize]
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum ProductSizeVariantOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  publishedAt_ASC
  publishedAt_DESC
  size_ASC
  size_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ProductSizeVariantUpdateInput {
  """Manage document localizations"""
  localizations: ProductSizeVariantUpdateLocalizationsInput
  """name input for default locale (en)"""
  name: String
  product: ProductUpdateOneInlineInput
  size: ProductSize
}

input ProductSizeVariantUpdateLocalizationDataInput {
  name: String
}

input ProductSizeVariantUpdateLocalizationInput {
  data: ProductSizeVariantUpdateLocalizationDataInput!
  locale: Locale!
}

input ProductSizeVariantUpdateLocalizationsInput {
  """Localizations to create"""
  create: [ProductSizeVariantCreateLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
  """Localizations to update"""
  update: [ProductSizeVariantUpdateLocalizationInput!]
  upsert: [ProductSizeVariantUpsertLocalizationInput!]
}

input ProductSizeVariantUpdateManyInlineInput {
  """Connect multiple existing ProductSizeVariant documents"""
  connect: [ProductSizeVariantConnectInput!]
  """Create and connect multiple ProductSizeVariant documents"""
  create: [ProductSizeVariantCreateInput!]
  """Delete multiple ProductSizeVariant documents"""
  delete: [ProductSizeVariantWhereUniqueInput!]
  """Disconnect multiple ProductSizeVariant documents"""
  disconnect: [ProductSizeVariantWhereUniqueInput!]
  """
  Override currently-connected documents with multiple existing ProductSizeVariant documents
  """
  set: [ProductSizeVariantWhereUniqueInput!]
  """Update multiple ProductSizeVariant documents"""
  update: [ProductSizeVariantUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple ProductSizeVariant documents"""
  upsert: [ProductSizeVariantUpsertWithNestedWhereUniqueInput!]
}

input ProductSizeVariantUpdateManyInput {
  """Optional updates to localizations"""
  localizations: ProductSizeVariantUpdateManyLocalizationsInput
  """name input for default locale (en)"""
  name: String
  size: ProductSize
}

input ProductSizeVariantUpdateManyLocalizationDataInput {
  name: String
}

input ProductSizeVariantUpdateManyLocalizationInput {
  data: ProductSizeVariantUpdateManyLocalizationDataInput!
  locale: Locale!
}

input ProductSizeVariantUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [ProductSizeVariantUpdateManyLocalizationInput!]
}

input ProductSizeVariantUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: ProductSizeVariantUpdateManyInput!
  """Document search"""
  where: ProductSizeVariantWhereInput!
}

input ProductSizeVariantUpdateOneInlineInput {
  """Connect existing ProductSizeVariant document"""
  connect: ProductSizeVariantWhereUniqueInput
  """Create and connect one ProductSizeVariant document"""
  create: ProductSizeVariantCreateInput
  """Delete currently connected ProductSizeVariant document"""
  delete: Boolean
  """Disconnect currently connected ProductSizeVariant document"""
  disconnect: Boolean
  """Update single ProductSizeVariant document"""
  update: ProductSizeVariantUpdateWithNestedWhereUniqueInput
  """Upsert single ProductSizeVariant document"""
  upsert: ProductSizeVariantUpsertWithNestedWhereUniqueInput
}

input ProductSizeVariantUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: ProductSizeVariantUpdateInput!
  """Unique document search"""
  where: ProductSizeVariantWhereUniqueInput!
}

input ProductSizeVariantUpsertInput {
  """Create document if it didn't exist"""
  create: ProductSizeVariantCreateInput!
  """Update document if it exists"""
  update: ProductSizeVariantUpdateInput!
}

input ProductSizeVariantUpsertLocalizationInput {
  create: ProductSizeVariantCreateLocalizationDataInput!
  locale: Locale!
  update: ProductSizeVariantUpdateLocalizationDataInput!
}

input ProductSizeVariantUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: ProductSizeVariantUpsertInput!
  """Unique document search"""
  where: ProductSizeVariantWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input ProductSizeVariantWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input ProductSizeVariantWhereInput {
  """Logical AND on all given filters."""
  AND: [ProductSizeVariantWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ProductSizeVariantWhereInput!]
  """Logical OR on all given filters."""
  OR: [ProductSizeVariantWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: ProductSizeVariantWhereStageInput
  documentInStages_none: ProductSizeVariantWhereStageInput
  documentInStages_some: ProductSizeVariantWhereStageInput
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  name: String
  """All values containing the given string."""
  name_contains: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values that are contained in given list."""
  name_in: [String]
  """Any other value that exists and is not equal to the given value."""
  name_not: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  """All values that are not contained in given list."""
  name_not_in: [String]
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values starting with the given string."""
  name_starts_with: String
  product: ProductWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  size: ProductSize
  """All values that are contained in given list."""
  size_in: [ProductSize]
  """Any other value that exists and is not equal to the given value."""
  size_not: ProductSize
  """All values that are not contained in given list."""
  size_not_in: [ProductSize]
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input ProductSizeVariantWhereStageInput {
  """Logical AND on all given filters."""
  AND: [ProductSizeVariantWhereStageInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ProductSizeVariantWhereStageInput!]
  """Logical OR on all given filters."""
  OR: [ProductSizeVariantWhereStageInput!]
  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: ProductSizeVariantWhereComparatorInput
  """Specify the stage to compare with"""
  stage: Stage
}

"""References ProductSizeVariant record uniquely"""
input ProductSizeVariantWhereUniqueInput {
  id: ID
}

input ProductUpdateInput {
  categories: CategoryUpdateManyInlineInput
  collections: CollectionUpdateManyInlineInput
  """description input for default locale (en)"""
  description: String
  images: AssetUpdateManyInlineInput
  """Manage document localizations"""
  localizations: ProductUpdateLocalizationsInput
  """name input for default locale (en)"""
  name: String
  orderItems: OrderItemUpdateManyInlineInput
  """price input for default locale (en)"""
  price: Int
  reviews: ReviewUpdateManyInlineInput
  """slug input for default locale (en)"""
  slug: String
  variants: ProductVariantsUpdateManyInlineInput
}

input ProductUpdateLocalizationDataInput {
  description: String
  name: String
  price: Int
  slug: String
}

input ProductUpdateLocalizationInput {
  data: ProductUpdateLocalizationDataInput!
  locale: Locale!
}

input ProductUpdateLocalizationsInput {
  """Localizations to create"""
  create: [ProductCreateLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
  """Localizations to update"""
  update: [ProductUpdateLocalizationInput!]
  upsert: [ProductUpsertLocalizationInput!]
}

input ProductUpdateManyInlineInput {
  """Connect multiple existing Product documents"""
  connect: [ProductConnectInput!]
  """Create and connect multiple Product documents"""
  create: [ProductCreateInput!]
  """Delete multiple Product documents"""
  delete: [ProductWhereUniqueInput!]
  """Disconnect multiple Product documents"""
  disconnect: [ProductWhereUniqueInput!]
  """
  Override currently-connected documents with multiple existing Product documents
  """
  set: [ProductWhereUniqueInput!]
  """Update multiple Product documents"""
  update: [ProductUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Product documents"""
  upsert: [ProductUpsertWithNestedWhereUniqueInput!]
}

input ProductUpdateManyInput {
  """description input for default locale (en)"""
  description: String
  """Optional updates to localizations"""
  localizations: ProductUpdateManyLocalizationsInput
  """price input for default locale (en)"""
  price: Int
}

input ProductUpdateManyLocalizationDataInput {
  description: String
  price: Int
}

input ProductUpdateManyLocalizationInput {
  data: ProductUpdateManyLocalizationDataInput!
  locale: Locale!
}

input ProductUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [ProductUpdateManyLocalizationInput!]
}

input ProductUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: ProductUpdateManyInput!
  """Document search"""
  where: ProductWhereInput!
}

input ProductUpdateOneInlineInput {
  """Connect existing Product document"""
  connect: ProductWhereUniqueInput
  """Create and connect one Product document"""
  create: ProductCreateInput
  """Delete currently connected Product document"""
  delete: Boolean
  """Disconnect currently connected Product document"""
  disconnect: Boolean
  """Update single Product document"""
  update: ProductUpdateWithNestedWhereUniqueInput
  """Upsert single Product document"""
  upsert: ProductUpsertWithNestedWhereUniqueInput
}

input ProductUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: ProductUpdateInput!
  """Unique document search"""
  where: ProductWhereUniqueInput!
}

input ProductUpsertInput {
  """Create document if it didn't exist"""
  create: ProductCreateInput!
  """Update document if it exists"""
  update: ProductUpdateInput!
}

input ProductUpsertLocalizationInput {
  create: ProductCreateLocalizationDataInput!
  locale: Locale!
  update: ProductUpdateLocalizationDataInput!
}

input ProductUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: ProductUpsertInput!
  """Unique document search"""
  where: ProductWhereUniqueInput!
}

union ProductVariants = ProductColorVariant | ProductSizeColorVariant | ProductSizeVariant

input ProductVariantsConnectInput {
  ProductColorVariant: ProductColorVariantConnectInput
  ProductSizeColorVariant: ProductSizeColorVariantConnectInput
  ProductSizeVariant: ProductSizeVariantConnectInput
}

input ProductVariantsCreateInput {
  ProductColorVariant: ProductColorVariantCreateInput
  ProductSizeColorVariant: ProductSizeColorVariantCreateInput
  ProductSizeVariant: ProductSizeVariantCreateInput
}

input ProductVariantsCreateManyInlineInput {
  """Connect multiple existing ProductVariants documents"""
  connect: [ProductVariantsWhereUniqueInput!]
  """Create and connect multiple existing ProductVariants documents"""
  create: [ProductVariantsCreateInput!]
}

input ProductVariantsCreateOneInlineInput {
  """Connect one existing ProductVariants document"""
  connect: ProductVariantsWhereUniqueInput
  """Create and connect one ProductVariants document"""
  create: ProductVariantsCreateInput
}

input ProductVariantsUpdateInput {
  ProductColorVariant: ProductColorVariantUpdateInput
  ProductSizeColorVariant: ProductSizeColorVariantUpdateInput
  ProductSizeVariant: ProductSizeVariantUpdateInput
}

input ProductVariantsUpdateManyInlineInput {
  """Connect multiple existing ProductVariants documents"""
  connect: [ProductVariantsConnectInput!]
  """Create and connect multiple ProductVariants documents"""
  create: [ProductVariantsCreateInput!]
  """Delete multiple ProductVariants documents"""
  delete: [ProductVariantsWhereUniqueInput!]
  """Disconnect multiple ProductVariants documents"""
  disconnect: [ProductVariantsWhereUniqueInput!]
  """
  Override currently-connected documents with multiple existing ProductVariants documents
  """
  set: [ProductVariantsWhereUniqueInput!]
  """Update multiple ProductVariants documents"""
  update: [ProductVariantsUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple ProductVariants documents"""
  upsert: [ProductVariantsUpsertWithNestedWhereUniqueInput!]
}

input ProductVariantsUpdateManyWithNestedWhereInput {
  ProductColorVariant: ProductColorVariantUpdateManyWithNestedWhereInput
  ProductSizeColorVariant: ProductSizeColorVariantUpdateManyWithNestedWhereInput
  ProductSizeVariant: ProductSizeVariantUpdateManyWithNestedWhereInput
}

input ProductVariantsUpdateOneInlineInput {
  """Connect existing ProductVariants document"""
  connect: ProductVariantsWhereUniqueInput
  """Create and connect one ProductVariants document"""
  create: ProductVariantsCreateInput
  """Delete currently connected ProductVariants document"""
  delete: Boolean
  """Disconnect currently connected ProductVariants document"""
  disconnect: Boolean
  """Update single ProductVariants document"""
  update: ProductVariantsUpdateWithNestedWhereUniqueInput
  """Upsert single ProductVariants document"""
  upsert: ProductVariantsUpsertWithNestedWhereUniqueInput
}

input ProductVariantsUpdateWithNestedWhereUniqueInput {
  ProductColorVariant: ProductColorVariantUpdateWithNestedWhereUniqueInput
  ProductSizeColorVariant: ProductSizeColorVariantUpdateWithNestedWhereUniqueInput
  ProductSizeVariant: ProductSizeVariantUpdateWithNestedWhereUniqueInput
}

input ProductVariantsUpsertWithNestedWhereUniqueInput {
  ProductColorVariant: ProductColorVariantUpsertWithNestedWhereUniqueInput
  ProductSizeColorVariant: ProductSizeColorVariantUpsertWithNestedWhereUniqueInput
  ProductSizeVariant: ProductSizeVariantUpsertWithNestedWhereUniqueInput
}

input ProductVariantsWhereInput {
  ProductColorVariant: ProductColorVariantWhereInput
  ProductSizeColorVariant: ProductSizeColorVariantWhereInput
  ProductSizeVariant: ProductSizeVariantWhereInput
}

input ProductVariantsWhereUniqueInput {
  ProductColorVariant: ProductColorVariantWhereUniqueInput
  ProductSizeColorVariant: ProductSizeColorVariantWhereUniqueInput
  ProductSizeVariant: ProductSizeVariantWhereUniqueInput
}

"""
This contains a set of filters that can be used to compare values internally
"""
input ProductWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input ProductWhereInput {
  """Logical AND on all given filters."""
  AND: [ProductWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ProductWhereInput!]
  """Logical OR on all given filters."""
  OR: [ProductWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  categories_every: CategoryWhereInput
  categories_none: CategoryWhereInput
  categories_some: CategoryWhereInput
  collections_every: CollectionWhereInput
  collections_none: CollectionWhereInput
  collections_some: CollectionWhereInput
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  description: String
  """All values containing the given string."""
  description_contains: String
  """All values ending with the given string."""
  description_ends_with: String
  """All values that are contained in given list."""
  description_in: [String]
  """Any other value that exists and is not equal to the given value."""
  description_not: String
  """All values not containing the given string."""
  description_not_contains: String
  """All values not ending with the given string"""
  description_not_ends_with: String
  """All values that are not contained in given list."""
  description_not_in: [String]
  """All values not starting with the given string."""
  description_not_starts_with: String
  """All values starting with the given string."""
  description_starts_with: String
  documentInStages_every: ProductWhereStageInput
  documentInStages_none: ProductWhereStageInput
  documentInStages_some: ProductWhereStageInput
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  images_every: AssetWhereInput
  images_none: AssetWhereInput
  images_some: AssetWhereInput
  name: String
  """All values containing the given string."""
  name_contains: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values that are contained in given list."""
  name_in: [String]
  """Any other value that exists and is not equal to the given value."""
  name_not: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  """All values that are not contained in given list."""
  name_not_in: [String]
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values starting with the given string."""
  name_starts_with: String
  orderItems_every: OrderItemWhereInput
  orderItems_none: OrderItemWhereInput
  orderItems_some: OrderItemWhereInput
  price: Int
  """All values greater than the given value."""
  price_gt: Int
  """All values greater than or equal the given value."""
  price_gte: Int
  """All values that are contained in given list."""
  price_in: [Int]
  """All values less than the given value."""
  price_lt: Int
  """All values less than or equal the given value."""
  price_lte: Int
  """Any other value that exists and is not equal to the given value."""
  price_not: Int
  """All values that are not contained in given list."""
  price_not_in: [Int]
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  reviews_every: ReviewWhereInput
  reviews_none: ReviewWhereInput
  reviews_some: ReviewWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  slug: String
  """All values containing the given string."""
  slug_contains: String
  """All values ending with the given string."""
  slug_ends_with: String
  """All values that are contained in given list."""
  slug_in: [String]
  """Any other value that exists and is not equal to the given value."""
  slug_not: String
  """All values not containing the given string."""
  slug_not_contains: String
  """All values not ending with the given string"""
  slug_not_ends_with: String
  """All values that are not contained in given list."""
  slug_not_in: [String]
  """All values not starting with the given string."""
  slug_not_starts_with: String
  """All values starting with the given string."""
  slug_starts_with: String
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
  """All values in which the union is empty"""
  variants_empty: Boolean
  """
  Matches if the union contains at least one connection to the provided item to the filter
  """
  variants_some: ProductVariantsWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input ProductWhereStageInput {
  """Logical AND on all given filters."""
  AND: [ProductWhereStageInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ProductWhereStageInput!]
  """Logical OR on all given filters."""
  OR: [ProductWhereStageInput!]
  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: ProductWhereComparatorInput
  """Specify the stage to compare with"""
  stage: Stage
}

"""References Product record uniquely"""
input ProductWhereUniqueInput {
  id: ID
}

input PublishLocaleInput {
  """Locales to publish"""
  locale: Locale!
  """Stages to publish selected locales to"""
  stages: [Stage!]!
}

type Query {
  """Retrieve a single asset"""
  asset(
    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: AssetWhereUniqueInput!
  ): Asset
  """Retrieve document version"""
  assetVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple assets"""
  assets(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: AssetOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: AssetWhereInput
  ): [Asset!]!
  """Retrieve multiple assets using the Relay connection interface"""
  assetsConnection(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: AssetOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: AssetWhereInput
  ): AssetConnection!
  """Retrieve multiple categories"""
  categories(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `Category` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: CategoryOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: CategoryWhereInput
  ): [Category!]!
  """Retrieve multiple categories using the Relay connection interface"""
  categoriesConnection(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `Category` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: CategoryOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: CategoryWhereInput
  ): CategoryConnection!
  """Retrieve a single category"""
  category(
    """
    Defines which locales should be returned.
    
    Note that `Category` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: CategoryWhereUniqueInput!
  ): Category
  """Retrieve document version"""
  categoryVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve a single collection"""
  collection(
    """
    Defines which locales should be returned.
    
    Note that `Collection` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: CollectionWhereUniqueInput!
  ): Collection
  """Retrieve document version"""
  collectionVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple collections"""
  collections(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `Collection` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: CollectionOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: CollectionWhereInput
  ): [Collection!]!
  """Retrieve multiple collections using the Relay connection interface"""
  collectionsConnection(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `Collection` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: CollectionOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: CollectionWhereInput
  ): CollectionConnection!
  """Retrieve multiple currencies"""
  currencies(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `Currency` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: CurrencyOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: CurrencyWhereInput
  ): [Currency!]!
  """Retrieve multiple currencies using the Relay connection interface"""
  currenciesConnection(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `Currency` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: CurrencyOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: CurrencyWhereInput
  ): CurrencyConnection!
  """Retrieve a single currency"""
  currency(
    """
    Defines which locales should be returned.
    
    Note that `Currency` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: CurrencyWhereUniqueInput!
  ): Currency
  """Retrieve document version"""
  currencyVersion(where: VersionWhereInput!): DocumentVersion
  """Fetches an object given its ID"""
  entities(
    """Defines which locales to query for"""
    locales: [Locale!]
    """The where parameters to query components"""
    where: [EntityWhereInput!]!
  ): [Entity!]
  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
    """
    Defines which locales should be returned.
    
    Note that `Node` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
  ): Node
  """Retrieve a single order"""
  order(
    """
    Defines which locales should be returned.
    
    Note that `Order` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: OrderWhereUniqueInput!
  ): Order
  """Retrieve a single orderItem"""
  orderItem(
    """
    Defines which locales should be returned.
    
    Note that `OrderItem` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: OrderItemWhereUniqueInput!
  ): OrderItem
  """Retrieve document version"""
  orderItemVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple orderItems"""
  orderItems(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `OrderItem` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: OrderItemOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: OrderItemWhereInput
  ): [OrderItem!]!
  """Retrieve multiple orderItems using the Relay connection interface"""
  orderItemsConnection(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `OrderItem` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: OrderItemOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: OrderItemWhereInput
  ): OrderItemConnection!
  """Retrieve document version"""
  orderVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple orders"""
  orders(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `Order` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: OrderOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: OrderWhereInput
  ): [Order!]!
  """Retrieve multiple orders using the Relay connection interface"""
  ordersConnection(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `Order` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: OrderOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: OrderWhereInput
  ): OrderConnection!
  """Retrieve a single product"""
  product(
    """
    Defines which locales should be returned.
    
    Note that `Product` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: ProductWhereUniqueInput!
  ): Product
  """Retrieve a single productColorVariant"""
  productColorVariant(
    """
    Defines which locales should be returned.
    
    Note that `ProductColorVariant` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: ProductColorVariantWhereUniqueInput!
  ): ProductColorVariant
  """Retrieve document version"""
  productColorVariantVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple productColorVariants"""
  productColorVariants(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `ProductColorVariant` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ProductColorVariantOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ProductColorVariantWhereInput
  ): [ProductColorVariant!]!
  """
  Retrieve multiple productColorVariants using the Relay connection interface
  """
  productColorVariantsConnection(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `ProductColorVariant` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ProductColorVariantOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ProductColorVariantWhereInput
  ): ProductColorVariantConnection!
  """Retrieve a single productSizeColorVariant"""
  productSizeColorVariant(
    """
    Defines which locales should be returned.
    
    Note that `ProductSizeColorVariant` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: ProductSizeColorVariantWhereUniqueInput!
  ): ProductSizeColorVariant
  """Retrieve document version"""
  productSizeColorVariantVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple productSizeColorVariants"""
  productSizeColorVariants(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `ProductSizeColorVariant` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ProductSizeColorVariantOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ProductSizeColorVariantWhereInput
  ): [ProductSizeColorVariant!]!
  """
  Retrieve multiple productSizeColorVariants using the Relay connection interface
  """
  productSizeColorVariantsConnection(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `ProductSizeColorVariant` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ProductSizeColorVariantOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ProductSizeColorVariantWhereInput
  ): ProductSizeColorVariantConnection!
  """Retrieve a single productSizeVariant"""
  productSizeVariant(
    """
    Defines which locales should be returned.
    
    Note that `ProductSizeVariant` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: ProductSizeVariantWhereUniqueInput!
  ): ProductSizeVariant
  """Retrieve document version"""
  productSizeVariantVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple productSizeVariants"""
  productSizeVariants(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `ProductSizeVariant` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ProductSizeVariantOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ProductSizeVariantWhereInput
  ): [ProductSizeVariant!]!
  """
  Retrieve multiple productSizeVariants using the Relay connection interface
  """
  productSizeVariantsConnection(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `ProductSizeVariant` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ProductSizeVariantOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ProductSizeVariantWhereInput
  ): ProductSizeVariantConnection!
  """Retrieve document version"""
  productVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple products"""
  products(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `Product` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ProductOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ProductWhereInput
  ): [Product!]!
  """Retrieve multiple products using the Relay connection interface"""
  productsConnection(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `Product` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ProductOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ProductWhereInput
  ): ProductConnection!
  """Retrieve a single review"""
  review(
    """
    Defines which locales should be returned.
    
    Note that `Review` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: ReviewWhereUniqueInput!
  ): Review
  """Retrieve document version"""
  reviewVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple reviews"""
  reviews(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `Review` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ReviewOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ReviewWhereInput
  ): [Review!]!
  """Retrieve multiple reviews using the Relay connection interface"""
  reviewsConnection(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `Review` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ReviewOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ReviewWhereInput
  ): ReviewConnection!
  """Retrieve a single scheduledOperation"""
  scheduledOperation(
    """
    Defines which locales should be returned.
    
    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: ScheduledOperationWhereUniqueInput!
  ): ScheduledOperation
  """Retrieve multiple scheduledOperations"""
  scheduledOperations(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ScheduledOperationOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!
  """
  Retrieve multiple scheduledOperations using the Relay connection interface
  """
  scheduledOperationsConnection(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ScheduledOperationOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ScheduledOperationWhereInput
  ): ScheduledOperationConnection!
  """Retrieve a single scheduledRelease"""
  scheduledRelease(
    """
    Defines which locales should be returned.
    
    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: ScheduledReleaseWhereUniqueInput!
  ): ScheduledRelease
  """Retrieve multiple scheduledReleases"""
  scheduledReleases(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ScheduledReleaseOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ScheduledReleaseWhereInput
  ): [ScheduledRelease!]!
  """
  Retrieve multiple scheduledReleases using the Relay connection interface
  """
  scheduledReleasesConnection(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ScheduledReleaseOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ScheduledReleaseWhereInput
  ): ScheduledReleaseConnection!
  """Retrieve a single user"""
  user(
    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: UserWhereUniqueInput!
  ): User
  """Retrieve multiple users"""
  users(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: UserOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: UserWhereInput
  ): [User!]!
  """Retrieve multiple users using the Relay connection interface"""
  usersConnection(
    after: String
    before: String
    first: Int
    last: Int
    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: UserOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: UserWhereInput
  ): UserConnection!
}

"""
Representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
type RGBA {
  a: RGBATransparency!
  b: RGBAHue!
  g: RGBAHue!
  r: RGBAHue!
}

scalar RGBAHue

"""
Input type representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
input RGBAInput {
  a: RGBATransparency!
  b: RGBAHue!
  g: RGBAHue!
  r: RGBAHue!
}

scalar RGBATransparency

type Review implements Entity & Node {
  content: String!
  """The time the document was created"""
  createdAt: DateTime!
  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Review!]!
  email: String!
  headline: String!
  """List of Review versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
  """The unique identifier"""
  id: ID!
  name: String!
  product(
    """
    Sets the locale of the parent document as the first locale in the fallback locales in the query's subtree.
    
    Note that `product` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `product` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, localized entries that do not have the provided locale defined will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Product
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  rating: Int
  scheduledIn(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!
  """System stage field"""
  stage: Stage!
  """The time the document was updated"""
  updatedAt: DateTime!
  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input ReviewConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
  """Document to connect"""
  where: ReviewWhereUniqueInput!
}

"""A connection to a list of items."""
type ReviewConnection {
  aggregate: Aggregate!
  """A list of edges."""
  edges: [ReviewEdge!]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input ReviewCreateInput {
  content: String!
  createdAt: DateTime
  email: String!
  headline: String!
  name: String!
  product: ProductCreateOneInlineInput
  rating: Int
  updatedAt: DateTime
}

input ReviewCreateManyInlineInput {
  """Connect multiple existing Review documents"""
  connect: [ReviewWhereUniqueInput!]
  """Create and connect multiple existing Review documents"""
  create: [ReviewCreateInput!]
}

input ReviewCreateOneInlineInput {
  """Connect one existing Review document"""
  connect: ReviewWhereUniqueInput
  """Create and connect one Review document"""
  create: ReviewCreateInput
}

"""An edge in a connection."""
type ReviewEdge {
  """A cursor for use in pagination."""
  cursor: String!
  """The item at the end of the edge."""
  node: Review!
}

"""Identifies documents"""
input ReviewManyWhereInput {
  """Logical AND on all given filters."""
  AND: [ReviewWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ReviewWhereInput!]
  """Logical OR on all given filters."""
  OR: [ReviewWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  content: String
  """All values containing the given string."""
  content_contains: String
  """All values ending with the given string."""
  content_ends_with: String
  """All values that are contained in given list."""
  content_in: [String]
  """Any other value that exists and is not equal to the given value."""
  content_not: String
  """All values not containing the given string."""
  content_not_contains: String
  """All values not ending with the given string"""
  content_not_ends_with: String
  """All values that are not contained in given list."""
  content_not_in: [String]
  """All values not starting with the given string."""
  content_not_starts_with: String
  """All values starting with the given string."""
  content_starts_with: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: ReviewWhereStageInput
  documentInStages_none: ReviewWhereStageInput
  documentInStages_some: ReviewWhereStageInput
  email: String
  """All values containing the given string."""
  email_contains: String
  """All values ending with the given string."""
  email_ends_with: String
  """All values that are contained in given list."""
  email_in: [String]
  """Any other value that exists and is not equal to the given value."""
  email_not: String
  """All values not containing the given string."""
  email_not_contains: String
  """All values not ending with the given string"""
  email_not_ends_with: String
  """All values that are not contained in given list."""
  email_not_in: [String]
  """All values not starting with the given string."""
  email_not_starts_with: String
  """All values starting with the given string."""
  email_starts_with: String
  headline: String
  """All values containing the given string."""
  headline_contains: String
  """All values ending with the given string."""
  headline_ends_with: String
  """All values that are contained in given list."""
  headline_in: [String]
  """Any other value that exists and is not equal to the given value."""
  headline_not: String
  """All values not containing the given string."""
  headline_not_contains: String
  """All values not ending with the given string"""
  headline_not_ends_with: String
  """All values that are not contained in given list."""
  headline_not_in: [String]
  """All values not starting with the given string."""
  headline_not_starts_with: String
  """All values starting with the given string."""
  headline_starts_with: String
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  name: String
  """All values containing the given string."""
  name_contains: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values that are contained in given list."""
  name_in: [String]
  """Any other value that exists and is not equal to the given value."""
  name_not: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  """All values that are not contained in given list."""
  name_not_in: [String]
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values starting with the given string."""
  name_starts_with: String
  product: ProductWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  rating: Int
  """All values greater than the given value."""
  rating_gt: Int
  """All values greater than or equal the given value."""
  rating_gte: Int
  """All values that are contained in given list."""
  rating_in: [Int]
  """All values less than the given value."""
  rating_lt: Int
  """All values less than or equal the given value."""
  rating_lte: Int
  """Any other value that exists and is not equal to the given value."""
  rating_not: Int
  """All values that are not contained in given list."""
  rating_not_in: [Int]
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum ReviewOrderByInput {
  content_ASC
  content_DESC
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  headline_ASC
  headline_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  publishedAt_ASC
  publishedAt_DESC
  rating_ASC
  rating_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ReviewUpdateInput {
  content: String
  email: String
  headline: String
  name: String
  product: ProductUpdateOneInlineInput
  rating: Int
}

input ReviewUpdateManyInlineInput {
  """Connect multiple existing Review documents"""
  connect: [ReviewConnectInput!]
  """Create and connect multiple Review documents"""
  create: [ReviewCreateInput!]
  """Delete multiple Review documents"""
  delete: [ReviewWhereUniqueInput!]
  """Disconnect multiple Review documents"""
  disconnect: [ReviewWhereUniqueInput!]
  """
  Override currently-connected documents with multiple existing Review documents
  """
  set: [ReviewWhereUniqueInput!]
  """Update multiple Review documents"""
  update: [ReviewUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Review documents"""
  upsert: [ReviewUpsertWithNestedWhereUniqueInput!]
}

input ReviewUpdateManyInput {
  content: String
  email: String
  headline: String
  name: String
  rating: Int
}

input ReviewUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: ReviewUpdateManyInput!
  """Document search"""
  where: ReviewWhereInput!
}

input ReviewUpdateOneInlineInput {
  """Connect existing Review document"""
  connect: ReviewWhereUniqueInput
  """Create and connect one Review document"""
  create: ReviewCreateInput
  """Delete currently connected Review document"""
  delete: Boolean
  """Disconnect currently connected Review document"""
  disconnect: Boolean
  """Update single Review document"""
  update: ReviewUpdateWithNestedWhereUniqueInput
  """Upsert single Review document"""
  upsert: ReviewUpsertWithNestedWhereUniqueInput
}

input ReviewUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: ReviewUpdateInput!
  """Unique document search"""
  where: ReviewWhereUniqueInput!
}

input ReviewUpsertInput {
  """Create document if it didn't exist"""
  create: ReviewCreateInput!
  """Update document if it exists"""
  update: ReviewUpdateInput!
}

input ReviewUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: ReviewUpsertInput!
  """Unique document search"""
  where: ReviewWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input ReviewWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input ReviewWhereInput {
  """Logical AND on all given filters."""
  AND: [ReviewWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ReviewWhereInput!]
  """Logical OR on all given filters."""
  OR: [ReviewWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  content: String
  """All values containing the given string."""
  content_contains: String
  """All values ending with the given string."""
  content_ends_with: String
  """All values that are contained in given list."""
  content_in: [String]
  """Any other value that exists and is not equal to the given value."""
  content_not: String
  """All values not containing the given string."""
  content_not_contains: String
  """All values not ending with the given string"""
  content_not_ends_with: String
  """All values that are not contained in given list."""
  content_not_in: [String]
  """All values not starting with the given string."""
  content_not_starts_with: String
  """All values starting with the given string."""
  content_starts_with: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: ReviewWhereStageInput
  documentInStages_none: ReviewWhereStageInput
  documentInStages_some: ReviewWhereStageInput
  email: String
  """All values containing the given string."""
  email_contains: String
  """All values ending with the given string."""
  email_ends_with: String
  """All values that are contained in given list."""
  email_in: [String]
  """Any other value that exists and is not equal to the given value."""
  email_not: String
  """All values not containing the given string."""
  email_not_contains: String
  """All values not ending with the given string"""
  email_not_ends_with: String
  """All values that are not contained in given list."""
  email_not_in: [String]
  """All values not starting with the given string."""
  email_not_starts_with: String
  """All values starting with the given string."""
  email_starts_with: String
  headline: String
  """All values containing the given string."""
  headline_contains: String
  """All values ending with the given string."""
  headline_ends_with: String
  """All values that are contained in given list."""
  headline_in: [String]
  """Any other value that exists and is not equal to the given value."""
  headline_not: String
  """All values not containing the given string."""
  headline_not_contains: String
  """All values not ending with the given string"""
  headline_not_ends_with: String
  """All values that are not contained in given list."""
  headline_not_in: [String]
  """All values not starting with the given string."""
  headline_not_starts_with: String
  """All values starting with the given string."""
  headline_starts_with: String
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  name: String
  """All values containing the given string."""
  name_contains: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values that are contained in given list."""
  name_in: [String]
  """Any other value that exists and is not equal to the given value."""
  name_not: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  """All values that are not contained in given list."""
  name_not_in: [String]
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values starting with the given string."""
  name_starts_with: String
  product: ProductWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  rating: Int
  """All values greater than the given value."""
  rating_gt: Int
  """All values greater than or equal the given value."""
  rating_gte: Int
  """All values that are contained in given list."""
  rating_in: [Int]
  """All values less than the given value."""
  rating_lt: Int
  """All values less than or equal the given value."""
  rating_lte: Int
  """Any other value that exists and is not equal to the given value."""
  rating_not: Int
  """All values that are not contained in given list."""
  rating_not_in: [Int]
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input ReviewWhereStageInput {
  """Logical AND on all given filters."""
  AND: [ReviewWhereStageInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ReviewWhereStageInput!]
  """Logical OR on all given filters."""
  OR: [ReviewWhereStageInput!]
  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: ReviewWhereComparatorInput
  """Specify the stage to compare with"""
  stage: Stage
}

"""References Review record uniquely"""
input ReviewWhereUniqueInput {
  id: ID
}

"""
Custom type representing a rich text value comprising of raw rich text ast, html, markdown and text values
"""
type RichText {
  """Returns HTMl representation"""
  html: String!
  """Returns Markdown representation"""
  markdown: String!
  """Returns AST representation"""
  raw: RichTextAST!
  """Returns plain-text contents of RichText"""
  text: String!
}

"""Slate-compatible RichText AST"""
scalar RichTextAST

"""Scheduled Operation system model"""
type ScheduledOperation implements Entity & Node {
  affectedDocuments(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `affectedDocuments` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `affectedDocuments` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
  ): [ScheduledOperationAffectedDocument!]!
  """The time the document was created"""
  createdAt: DateTime!
  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """Operation description"""
  description: String
  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [ScheduledOperation!]!
  """Operation error message"""
  errorMessage: String
  """The unique identifier"""
  id: ID!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """
  Raw operation payload including all details, this field is subject to change
  """
  rawPayload: Json!
  """The release this operation is scheduled for"""
  release(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `release` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `release` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): ScheduledRelease
  """System stage field"""
  stage: Stage!
  """operation Status"""
  status: ScheduledOperationStatus!
  """The time the document was updated"""
  updatedAt: DateTime!
  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

union ScheduledOperationAffectedDocument = Asset | Category | Collection | Currency | Order | OrderItem | Product | ProductColorVariant | ProductSizeColorVariant | ProductSizeVariant | Review

input ScheduledOperationConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
  """Document to connect"""
  where: ScheduledOperationWhereUniqueInput!
}

"""A connection to a list of items."""
type ScheduledOperationConnection {
  aggregate: Aggregate!
  """A list of edges."""
  edges: [ScheduledOperationEdge!]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input ScheduledOperationCreateManyInlineInput {
  """Connect multiple existing ScheduledOperation documents"""
  connect: [ScheduledOperationWhereUniqueInput!]
}

input ScheduledOperationCreateOneInlineInput {
  """Connect one existing ScheduledOperation document"""
  connect: ScheduledOperationWhereUniqueInput
}

"""An edge in a connection."""
type ScheduledOperationEdge {
  """A cursor for use in pagination."""
  cursor: String!
  """The item at the end of the edge."""
  node: ScheduledOperation!
}

"""Identifies documents"""
input ScheduledOperationManyWhereInput {
  """Logical AND on all given filters."""
  AND: [ScheduledOperationWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledOperationWhereInput!]
  """Logical OR on all given filters."""
  OR: [ScheduledOperationWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  description: String
  """All values containing the given string."""
  description_contains: String
  """All values ending with the given string."""
  description_ends_with: String
  """All values that are contained in given list."""
  description_in: [String]
  """Any other value that exists and is not equal to the given value."""
  description_not: String
  """All values not containing the given string."""
  description_not_contains: String
  """All values not ending with the given string"""
  description_not_ends_with: String
  """All values that are not contained in given list."""
  description_not_in: [String]
  """All values not starting with the given string."""
  description_not_starts_with: String
  """All values starting with the given string."""
  description_starts_with: String
  errorMessage: String
  """All values containing the given string."""
  errorMessage_contains: String
  """All values ending with the given string."""
  errorMessage_ends_with: String
  """All values that are contained in given list."""
  errorMessage_in: [String]
  """Any other value that exists and is not equal to the given value."""
  errorMessage_not: String
  """All values not containing the given string."""
  errorMessage_not_contains: String
  """All values not ending with the given string"""
  errorMessage_not_ends_with: String
  """All values that are not contained in given list."""
  errorMessage_not_in: [String]
  """All values not starting with the given string."""
  errorMessage_not_starts_with: String
  """All values starting with the given string."""
  errorMessage_starts_with: String
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  """All values containing the given json path."""
  rawPayload_json_path_exists: String
  """
  Recursively tries to find the provided JSON scalar value inside the field.
  It does use an exact match when comparing values.
  If you pass `null` as value the filter will be ignored. 
  Note: This filter fails if you try to look for a non scalar JSON value!
  """
  rawPayload_value_recursive: Json
  release: ScheduledReleaseWhereInput
  status: ScheduledOperationStatus
  """All values that are contained in given list."""
  status_in: [ScheduledOperationStatus]
  """Any other value that exists and is not equal to the given value."""
  status_not: ScheduledOperationStatus
  """All values that are not contained in given list."""
  status_not_in: [ScheduledOperationStatus]
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum ScheduledOperationOrderByInput {
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  errorMessage_ASC
  errorMessage_DESC
  id_ASC
  id_DESC
  publishedAt_ASC
  publishedAt_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""System Scheduled Operation Status"""
enum ScheduledOperationStatus {
  CANCELED
  COMPLETED
  FAILED
  IN_PROGRESS
  PENDING
}

input ScheduledOperationUpdateManyInlineInput {
  """Connect multiple existing ScheduledOperation documents"""
  connect: [ScheduledOperationConnectInput!]
  """Disconnect multiple ScheduledOperation documents"""
  disconnect: [ScheduledOperationWhereUniqueInput!]
  """
  Override currently-connected documents with multiple existing ScheduledOperation documents
  """
  set: [ScheduledOperationWhereUniqueInput!]
}

input ScheduledOperationUpdateOneInlineInput {
  """Connect existing ScheduledOperation document"""
  connect: ScheduledOperationWhereUniqueInput
  """Disconnect currently connected ScheduledOperation document"""
  disconnect: Boolean
}

"""Identifies documents"""
input ScheduledOperationWhereInput {
  """Logical AND on all given filters."""
  AND: [ScheduledOperationWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledOperationWhereInput!]
  """Logical OR on all given filters."""
  OR: [ScheduledOperationWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  description: String
  """All values containing the given string."""
  description_contains: String
  """All values ending with the given string."""
  description_ends_with: String
  """All values that are contained in given list."""
  description_in: [String]
  """Any other value that exists and is not equal to the given value."""
  description_not: String
  """All values not containing the given string."""
  description_not_contains: String
  """All values not ending with the given string"""
  description_not_ends_with: String
  """All values that are not contained in given list."""
  description_not_in: [String]
  """All values not starting with the given string."""
  description_not_starts_with: String
  """All values starting with the given string."""
  description_starts_with: String
  errorMessage: String
  """All values containing the given string."""
  errorMessage_contains: String
  """All values ending with the given string."""
  errorMessage_ends_with: String
  """All values that are contained in given list."""
  errorMessage_in: [String]
  """Any other value that exists and is not equal to the given value."""
  errorMessage_not: String
  """All values not containing the given string."""
  errorMessage_not_contains: String
  """All values not ending with the given string"""
  errorMessage_not_ends_with: String
  """All values that are not contained in given list."""
  errorMessage_not_in: [String]
  """All values not starting with the given string."""
  errorMessage_not_starts_with: String
  """All values starting with the given string."""
  errorMessage_starts_with: String
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  """All values containing the given json path."""
  rawPayload_json_path_exists: String
  """
  Recursively tries to find the provided JSON scalar value inside the field.
  It does use an exact match when comparing values.
  If you pass `null` as value the filter will be ignored. 
  Note: This filter fails if you try to look for a non scalar JSON value!
  """
  rawPayload_value_recursive: Json
  release: ScheduledReleaseWhereInput
  status: ScheduledOperationStatus
  """All values that are contained in given list."""
  status_in: [ScheduledOperationStatus]
  """Any other value that exists and is not equal to the given value."""
  status_not: ScheduledOperationStatus
  """All values that are not contained in given list."""
  status_not_in: [ScheduledOperationStatus]
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""References ScheduledOperation record uniquely"""
input ScheduledOperationWhereUniqueInput {
  id: ID
}

"""Scheduled Release system model"""
type ScheduledRelease implements Entity & Node {
  """The time the document was created"""
  createdAt: DateTime!
  """User that created this document"""
  createdBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """Release description"""
  description: String
  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [ScheduledRelease!]!
  """Release error message"""
  errorMessage: String
  """The unique identifier"""
  id: ID!
  """Whether scheduled release should be run"""
  isActive: Boolean!
  """Whether scheduled release is implicit"""
  isImplicit: Boolean!
  """Operations to run with this release"""
  operations(
    after: String
    before: String
    first: Int
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `operations` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `operations` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: ScheduledOperationOrderByInput
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  """User that last published this document"""
  publishedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """Release date and time"""
  releaseAt: DateTime
  """System stage field"""
  stage: Stage!
  """Release Status"""
  status: ScheduledReleaseStatus!
  """Release Title"""
  title: String
  """The time the document was updated"""
  updatedAt: DateTime!
  """User that last updated this document"""
  updatedBy(
    """
    Sets the locale of the resolved parent document as the only locale in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locale will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will affect any existing locale filtering defined in the query's tree for the subtree.
    """
    forceParentLocale: Boolean
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input ScheduledReleaseConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
  """Document to connect"""
  where: ScheduledReleaseWhereUniqueInput!
}

"""A connection to a list of items."""
type ScheduledReleaseConnection {
  aggregate: Aggregate!
  """A list of edges."""
  edges: [ScheduledReleaseEdge!]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input ScheduledReleaseCreateInput {
  createdAt: DateTime
  description: String
  errorMessage: String
  isActive: Boolean = true
  releaseAt: DateTime
  title: String
  updatedAt: DateTime
}

input ScheduledReleaseCreateManyInlineInput {
  """Connect multiple existing ScheduledRelease documents"""
  connect: [ScheduledReleaseWhereUniqueInput!]
  """Create and connect multiple existing ScheduledRelease documents"""
  create: [ScheduledReleaseCreateInput!]
}

input ScheduledReleaseCreateOneInlineInput {
  """Connect one existing ScheduledRelease document"""
  connect: ScheduledReleaseWhereUniqueInput
  """Create and connect one ScheduledRelease document"""
  create: ScheduledReleaseCreateInput
}

"""An edge in a connection."""
type ScheduledReleaseEdge {
  """A cursor for use in pagination."""
  cursor: String!
  """The item at the end of the edge."""
  node: ScheduledRelease!
}

"""Identifies documents"""
input ScheduledReleaseManyWhereInput {
  """Logical AND on all given filters."""
  AND: [ScheduledReleaseWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledReleaseWhereInput!]
  """Logical OR on all given filters."""
  OR: [ScheduledReleaseWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  description: String
  """All values containing the given string."""
  description_contains: String
  """All values ending with the given string."""
  description_ends_with: String
  """All values that are contained in given list."""
  description_in: [String]
  """Any other value that exists and is not equal to the given value."""
  description_not: String
  """All values not containing the given string."""
  description_not_contains: String
  """All values not ending with the given string"""
  description_not_ends_with: String
  """All values that are not contained in given list."""
  description_not_in: [String]
  """All values not starting with the given string."""
  description_not_starts_with: String
  """All values starting with the given string."""
  description_starts_with: String
  errorMessage: String
  """All values containing the given string."""
  errorMessage_contains: String
  """All values ending with the given string."""
  errorMessage_ends_with: String
  """All values that are contained in given list."""
  errorMessage_in: [String]
  """Any other value that exists and is not equal to the given value."""
  errorMessage_not: String
  """All values not containing the given string."""
  errorMessage_not_contains: String
  """All values not ending with the given string"""
  errorMessage_not_ends_with: String
  """All values that are not contained in given list."""
  errorMessage_not_in: [String]
  """All values not starting with the given string."""
  errorMessage_not_starts_with: String
  """All values starting with the given string."""
  errorMessage_starts_with: String
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  isActive: Boolean
  """Any other value that exists and is not equal to the given value."""
  isActive_not: Boolean
  isImplicit: Boolean
  """Any other value that exists and is not equal to the given value."""
  isImplicit_not: Boolean
  operations_every: ScheduledOperationWhereInput
  operations_none: ScheduledOperationWhereInput
  operations_some: ScheduledOperationWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  releaseAt: DateTime
  """All values greater than the given value."""
  releaseAt_gt: DateTime
  """All values greater than or equal the given value."""
  releaseAt_gte: DateTime
  """All values that are contained in given list."""
  releaseAt_in: [DateTime]
  """All values less than the given value."""
  releaseAt_lt: DateTime
  """All values less than or equal the given value."""
  releaseAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  releaseAt_not: DateTime
  """All values that are not contained in given list."""
  releaseAt_not_in: [DateTime]
  status: ScheduledReleaseStatus
  """All values that are contained in given list."""
  status_in: [ScheduledReleaseStatus]
  """Any other value that exists and is not equal to the given value."""
  status_not: ScheduledReleaseStatus
  """All values that are not contained in given list."""
  status_not_in: [ScheduledReleaseStatus]
  title: String
  """All values containing the given string."""
  title_contains: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values that are contained in given list."""
  title_in: [String]
  """Any other value that exists and is not equal to the given value."""
  title_not: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  """All values that are not contained in given list."""
  title_not_in: [String]
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values starting with the given string."""
  title_starts_with: String
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum ScheduledReleaseOrderByInput {
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  errorMessage_ASC
  errorMessage_DESC
  id_ASC
  id_DESC
  isActive_ASC
  isActive_DESC
  isImplicit_ASC
  isImplicit_DESC
  publishedAt_ASC
  publishedAt_DESC
  releaseAt_ASC
  releaseAt_DESC
  status_ASC
  status_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""System Scheduled Release Status"""
enum ScheduledReleaseStatus {
  COMPLETED
  FAILED
  IN_PROGRESS
  PENDING
}

input ScheduledReleaseUpdateInput {
  description: String
  errorMessage: String
  isActive: Boolean
  releaseAt: DateTime
  title: String
}

input ScheduledReleaseUpdateManyInlineInput {
  """Connect multiple existing ScheduledRelease documents"""
  connect: [ScheduledReleaseConnectInput!]
  """Create and connect multiple ScheduledRelease documents"""
  create: [ScheduledReleaseCreateInput!]
  """Delete multiple ScheduledRelease documents"""
  delete: [ScheduledReleaseWhereUniqueInput!]
  """Disconnect multiple ScheduledRelease documents"""
  disconnect: [ScheduledReleaseWhereUniqueInput!]
  """
  Override currently-connected documents with multiple existing ScheduledRelease documents
  """
  set: [ScheduledReleaseWhereUniqueInput!]
  """Update multiple ScheduledRelease documents"""
  update: [ScheduledReleaseUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple ScheduledRelease documents"""
  upsert: [ScheduledReleaseUpsertWithNestedWhereUniqueInput!]
}

input ScheduledReleaseUpdateManyInput {
  description: String
  errorMessage: String
  isActive: Boolean
  releaseAt: DateTime
  title: String
}

input ScheduledReleaseUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: ScheduledReleaseUpdateManyInput!
  """Document search"""
  where: ScheduledReleaseWhereInput!
}

input ScheduledReleaseUpdateOneInlineInput {
  """Connect existing ScheduledRelease document"""
  connect: ScheduledReleaseWhereUniqueInput
  """Create and connect one ScheduledRelease document"""
  create: ScheduledReleaseCreateInput
  """Delete currently connected ScheduledRelease document"""
  delete: Boolean
  """Disconnect currently connected ScheduledRelease document"""
  disconnect: Boolean
  """Update single ScheduledRelease document"""
  update: ScheduledReleaseUpdateWithNestedWhereUniqueInput
  """Upsert single ScheduledRelease document"""
  upsert: ScheduledReleaseUpsertWithNestedWhereUniqueInput
}

input ScheduledReleaseUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: ScheduledReleaseUpdateInput!
  """Unique document search"""
  where: ScheduledReleaseWhereUniqueInput!
}

input ScheduledReleaseUpsertInput {
  """Create document if it didn't exist"""
  create: ScheduledReleaseCreateInput!
  """Update document if it exists"""
  update: ScheduledReleaseUpdateInput!
}

input ScheduledReleaseUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: ScheduledReleaseUpsertInput!
  """Unique document search"""
  where: ScheduledReleaseWhereUniqueInput!
}

"""Identifies documents"""
input ScheduledReleaseWhereInput {
  """Logical AND on all given filters."""
  AND: [ScheduledReleaseWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledReleaseWhereInput!]
  """Logical OR on all given filters."""
  OR: [ScheduledReleaseWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  description: String
  """All values containing the given string."""
  description_contains: String
  """All values ending with the given string."""
  description_ends_with: String
  """All values that are contained in given list."""
  description_in: [String]
  """Any other value that exists and is not equal to the given value."""
  description_not: String
  """All values not containing the given string."""
  description_not_contains: String
  """All values not ending with the given string"""
  description_not_ends_with: String
  """All values that are not contained in given list."""
  description_not_in: [String]
  """All values not starting with the given string."""
  description_not_starts_with: String
  """All values starting with the given string."""
  description_starts_with: String
  errorMessage: String
  """All values containing the given string."""
  errorMessage_contains: String
  """All values ending with the given string."""
  errorMessage_ends_with: String
  """All values that are contained in given list."""
  errorMessage_in: [String]
  """Any other value that exists and is not equal to the given value."""
  errorMessage_not: String
  """All values not containing the given string."""
  errorMessage_not_contains: String
  """All values not ending with the given string"""
  errorMessage_not_ends_with: String
  """All values that are not contained in given list."""
  errorMessage_not_in: [String]
  """All values not starting with the given string."""
  errorMessage_not_starts_with: String
  """All values starting with the given string."""
  errorMessage_starts_with: String
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  isActive: Boolean
  """Any other value that exists and is not equal to the given value."""
  isActive_not: Boolean
  isImplicit: Boolean
  """Any other value that exists and is not equal to the given value."""
  isImplicit_not: Boolean
  operations_every: ScheduledOperationWhereInput
  operations_none: ScheduledOperationWhereInput
  operations_some: ScheduledOperationWhereInput
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  releaseAt: DateTime
  """All values greater than the given value."""
  releaseAt_gt: DateTime
  """All values greater than or equal the given value."""
  releaseAt_gte: DateTime
  """All values that are contained in given list."""
  releaseAt_in: [DateTime]
  """All values less than the given value."""
  releaseAt_lt: DateTime
  """All values less than or equal the given value."""
  releaseAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  releaseAt_not: DateTime
  """All values that are not contained in given list."""
  releaseAt_not_in: [DateTime]
  status: ScheduledReleaseStatus
  """All values that are contained in given list."""
  status_in: [ScheduledReleaseStatus]
  """Any other value that exists and is not equal to the given value."""
  status_not: ScheduledReleaseStatus
  """All values that are not contained in given list."""
  status_not_in: [ScheduledReleaseStatus]
  title: String
  """All values containing the given string."""
  title_contains: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values that are contained in given list."""
  title_in: [String]
  """Any other value that exists and is not equal to the given value."""
  title_not: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  """All values that are not contained in given list."""
  title_not_in: [String]
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values starting with the given string."""
  title_starts_with: String
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""References ScheduledRelease record uniquely"""
input ScheduledReleaseWhereUniqueInput {
  id: ID
}

"""Stage system enumeration"""
enum Stage {
  """The Draft is the default stage for all your content."""
  DRAFT
  """The Published stage is where you can publish your content to."""
  PUBLISHED
}

enum SystemDateTimeFieldVariation {
  BASE
  COMBINED
  LOCALIZATION
}

input UnpublishLocaleInput {
  """Locales to unpublish"""
  locale: Locale!
  """Stages to unpublish selected locales from"""
  stages: [Stage!]!
}

"""User system model"""
type User implements Entity & Node {
  """The time the document was created"""
  createdAt: DateTime!
  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [User!]!
  """The unique identifier"""
  id: ID!
  """Flag to determine if user is active or not"""
  isActive: Boolean!
  """User Kind. Can be either MEMBER, PAT or PUBLIC"""
  kind: UserKind!
  """The username"""
  name: String!
  """Profile Picture url"""
  picture: String
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  """System stage field"""
  stage: Stage!
  """The time the document was updated"""
  updatedAt: DateTime!
}

input UserConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
  """Document to connect"""
  where: UserWhereUniqueInput!
}

"""A connection to a list of items."""
type UserConnection {
  aggregate: Aggregate!
  """A list of edges."""
  edges: [UserEdge!]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

input UserCreateManyInlineInput {
  """Connect multiple existing User documents"""
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneInlineInput {
  """Connect one existing User document"""
  connect: UserWhereUniqueInput
}

"""An edge in a connection."""
type UserEdge {
  """A cursor for use in pagination."""
  cursor: String!
  """The item at the end of the edge."""
  node: User!
}

"""System User Kind"""
enum UserKind {
  MEMBER
  PAT
  PUBLIC
  WEBHOOK
}

"""Identifies documents"""
input UserManyWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  """Logical OR on all given filters."""
  OR: [UserWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  documentInStages_every: UserWhereStageInput
  documentInStages_none: UserWhereStageInput
  documentInStages_some: UserWhereStageInput
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  isActive: Boolean
  """Any other value that exists and is not equal to the given value."""
  isActive_not: Boolean
  kind: UserKind
  """All values that are contained in given list."""
  kind_in: [UserKind]
  """Any other value that exists and is not equal to the given value."""
  kind_not: UserKind
  """All values that are not contained in given list."""
  kind_not_in: [UserKind]
  name: String
  """All values containing the given string."""
  name_contains: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values that are contained in given list."""
  name_in: [String]
  """Any other value that exists and is not equal to the given value."""
  name_not: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  """All values that are not contained in given list."""
  name_not_in: [String]
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values starting with the given string."""
  name_starts_with: String
  picture: String
  """All values containing the given string."""
  picture_contains: String
  """All values ending with the given string."""
  picture_ends_with: String
  """All values that are contained in given list."""
  picture_in: [String]
  """Any other value that exists and is not equal to the given value."""
  picture_not: String
  """All values not containing the given string."""
  picture_not_contains: String
  """All values not ending with the given string"""
  picture_not_ends_with: String
  """All values that are not contained in given list."""
  picture_not_in: [String]
  """All values not starting with the given string."""
  picture_not_starts_with: String
  """All values starting with the given string."""
  picture_starts_with: String
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
}

enum UserOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  isActive_ASC
  isActive_DESC
  kind_ASC
  kind_DESC
  name_ASC
  name_DESC
  picture_ASC
  picture_DESC
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input UserUpdateManyInlineInput {
  """Connect multiple existing User documents"""
  connect: [UserConnectInput!]
  """Disconnect multiple User documents"""
  disconnect: [UserWhereUniqueInput!]
  """
  Override currently-connected documents with multiple existing User documents
  """
  set: [UserWhereUniqueInput!]
}

input UserUpdateOneInlineInput {
  """Connect existing User document"""
  connect: UserWhereUniqueInput
  """Disconnect currently connected User document"""
  disconnect: Boolean
}

"""
This contains a set of filters that can be used to compare values internally
"""
input UserWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""Identifies documents"""
input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  """Logical OR on all given filters."""
  OR: [UserWhereInput!]
  """Contains search across all appropriate fields."""
  _search: String
  createdAt: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  createdAt_not: DateTime
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime]
  documentInStages_every: UserWhereStageInput
  documentInStages_none: UserWhereStageInput
  documentInStages_some: UserWhereStageInput
  id: ID
  """All values containing the given string."""
  id_contains: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values that are contained in given list."""
  id_in: [ID]
  """Any other value that exists and is not equal to the given value."""
  id_not: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  """All values that are not contained in given list."""
  id_not_in: [ID]
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values starting with the given string."""
  id_starts_with: ID
  isActive: Boolean
  """Any other value that exists and is not equal to the given value."""
  isActive_not: Boolean
  kind: UserKind
  """All values that are contained in given list."""
  kind_in: [UserKind]
  """Any other value that exists and is not equal to the given value."""
  kind_not: UserKind
  """All values that are not contained in given list."""
  kind_not_in: [UserKind]
  name: String
  """All values containing the given string."""
  name_contains: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values that are contained in given list."""
  name_in: [String]
  """Any other value that exists and is not equal to the given value."""
  name_not: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  """All values that are not contained in given list."""
  name_not_in: [String]
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values starting with the given string."""
  name_starts_with: String
  picture: String
  """All values containing the given string."""
  picture_contains: String
  """All values ending with the given string."""
  picture_ends_with: String
  """All values that are contained in given list."""
  picture_in: [String]
  """Any other value that exists and is not equal to the given value."""
  picture_not: String
  """All values not containing the given string."""
  picture_not_contains: String
  """All values not ending with the given string"""
  picture_not_ends_with: String
  """All values that are not contained in given list."""
  picture_not_in: [String]
  """All values not starting with the given string."""
  picture_not_starts_with: String
  """All values starting with the given string."""
  picture_starts_with: String
  publishedAt: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  publishedAt_not: DateTime
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime]
  updatedAt: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """Any other value that exists and is not equal to the given value."""
  updatedAt_not: DateTime
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime]
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input UserWhereStageInput {
  """Logical AND on all given filters."""
  AND: [UserWhereStageInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereStageInput!]
  """Logical OR on all given filters."""
  OR: [UserWhereStageInput!]
  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: UserWhereComparatorInput
  """Specify the stage to compare with"""
  stage: Stage
}

"""References User record uniquely"""
input UserWhereUniqueInput {
  id: ID
}

type Version {
  createdAt: DateTime!
  id: ID!
  revision: Int!
  stage: Stage!
}

input VersionWhereInput {
  id: ID!
  revision: Int!
  stage: Stage!
}

enum _FilterKind {
  AND
  NOT
  OR
  contains
  contains_all
  contains_none
  contains_some
  descendants_of
  ends_with
  eq
  eq_not
  gt
  gte
  in
  json_path_exists
  json_value_recursive
  lt
  lte
  not_contains
  not_ends_with
  not_in
  not_starts_with
  relational_every
  relational_none
  relational_single
  relational_some
  search
  starts_with
  union_empty
  union_every
  union_none
  union_single
  union_some
}

enum _MutationInputFieldKind {
  enum
  relation
  richText
  richTextWithEmbeds
  scalar
  union
  virtual
}

enum _MutationKind {
  create
  delete
  deleteMany
  publish
  publishMany
  schedulePublish
  scheduleUnpublish
  unpublish
  unpublishMany
  update
  updateMany
  upsert
}

enum _OrderDirection {
  asc
  desc
}

enum _RelationInputCardinality {
  many
  one
}

enum _RelationInputKind {
  create
  update
}

enum _RelationKind {
  regular
  union
}

enum _SystemDateTimeFieldVariation {
  base
  combined
  localization
}